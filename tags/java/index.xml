<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Java on YSMILES HOME</title>
    <link>/tags/java/</link>
    <description>Recent content in Java on YSMILES HOME</description>
    <image>
      <title>YSMILES HOME</title>
      <url>%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Dec 2017 00:00:00 +0000</lastBuildDate><atom:link href="/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Differences between an interface and abstract class</title>
      <link>/posts/differences-between-an-interface-and-abstract-class/</link>
      <pubDate>Sun, 24 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/posts/differences-between-an-interface-and-abstract-class/</guid>
      <description>Introduction This article is mainly talking about the difference between interface and abstract class, which is a frequently asked questions at interview. I will discuss Java first, and then C++.
Personally, I am more familiar with C++, although I can write Java. So at the time one friend asked me about the question, I was shocked. I did not know &amp;ldquo;interface&amp;rdquo; at all. But after searching around, I learned that &amp;ldquo;interface&amp;rdquo; and &amp;ldquo;abstract class&amp;rdquo; are somehow ideas of OOP (especially, Java OOP).</description>
    </item>
    
  </channel>
</rss>
