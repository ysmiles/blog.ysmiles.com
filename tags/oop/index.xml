<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>OOP - Tag - ysmiles home new</title>
        <link>https://ysmiles.com/tags/oop/</link>
        <description>OOP - Tag - ysmiles home new</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>fromblog@ysmiles.com (Frederick)</managingEditor>
            <webMaster>fromblog@ysmiles.com (Frederick)</webMaster><copyright>copyright test</copyright><lastBuildDate>Sun, 24 Dec 2017 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://ysmiles.com/tags/oop/" rel="self" type="application/rss+xml" /><item>
    <title>Differences between an interface and abstract class</title>
    <link>https://ysmiles.com/posts/differences-between-an-interface-and-abstract-class/</link>
    <pubDate>Sun, 24 Dec 2017 00:00:00 &#43;0000</pubDate>
    <author>Frederick</author>
    <guid>https://ysmiles.com/posts/differences-between-an-interface-and-abstract-class/</guid>
    <description><![CDATA[Introduction This article is mainly talking about the difference between interface and abstract class, which is a frequently asked questions at interview. I will discuss Java first, and then C++.
Personally, I am more familiar with C++, although I can write Java. So at the time one friend asked me about the question, I was shocked. I did not know &ldquo;interface&rdquo; at all. But after searching around, I learned that &ldquo;interface&rdquo; and &ldquo;abstract class&rdquo; are somehow ideas of OOP (especially, Java OOP).]]></description>
</item>
</channel>
</rss>
