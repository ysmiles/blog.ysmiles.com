[{"content":"Actively updating\u0026hellip;\nThis post assume the reader to be familiar with at least one of other popular used programming language, preferably Java and C++; or know python before and just need refresh.\nArray Python\u0026rsquo;s array type is similar to C++\u0026rsquo;s vector or Java\u0026rsquo;s ArrayList.\nAnd for algorithm practice we usually use list, which will be introduced in next section.\nRef: array — Efficient arrays of numeric values\n# create an array array(\u0026#39;u\u0026#39;, \u0026#39;hello \\u2641\u0026#39;) array(\u0026#39;l\u0026#39;, [1, 2, 3, 4, 5]) array(\u0026#39;d\u0026#39;, [1.0, 2.0, 3.14]) # append value array.append(x) # insert array.insert(i, x) # remove by index (i default to -1) array.pop([i]) # remove by value array.remove(x) # Return the number of occurrences of x in the array. array.count(x) # find first array.index(x[, start[, stop]]) # reverse array.reverse() Note: Numpy array is different. It\u0026rsquo;s not often used in algorithm problem solving though.\nList Ref: class list\nLists implement all of the common and mutable sequence operations.\n# create a list list([iterable]) [] [a, b, c] [x for x in iterable] # Common sequence operations x in s # True if an item of s is equal to x, else False x not in s # False if an item of s is equal to x, else True s + t # the concatenation of s and t s * n or n * s # equivalent to adding s to itself n times s[i] # ith item of s, origin 0 s[i:j] # slice of s from i to j s[i:j:k] # slice of s from i to j with step k len(s) # length of s min(s) # smallest item of s max(s) # largest item of s s.index(x[, i[, j]]) # index of the first occurrence of x in s (at or after index i and before index j) s.count(x) # total number of occurrences of x in s # Mutable sequence operations s[i] = x # item i of s is replaced by x s[i:j] = t # slice of s from i to j is replaced by the contents of the iterable t del s[i:j] # same as s[i:j] = [] s[i:j:k] = t # the elements of s[i:j:k] are replaced by those of t del s[i:j:k] # removes the elements of s[i:j:k] from the list s.append(x) # appends x to the end of the sequence (same as s[len(s):len(s)] = [x]) s.clear() # removes all items from s (same as del s[:]) s.copy() # creates a shallow copy of s (same as s[:]) s.extend(t) or s += t # extends s with the contents of t (for the most part the same as s[len(s):len(s)] = t) s *= n # updates s with its contents repeated n times s.insert(i, x) # inserts x into s at the index given by i (same as s[i:i] = [x]) s.pop() or s.pop(i) # retrieves the item at i and also removes it from s s.remove(x) # remove the first item from s where s[i] is equal to x s.reverse() # reverses the items of s in place # sort a list sorted() list.sort() More about sort: Sorting HOW TO\nRanges Ref: class range\n# class range(stop) # class range(start, stop[, step]) # examples \u0026gt;\u0026gt;\u0026gt; list(range(10)) [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] \u0026gt;\u0026gt;\u0026gt; list(range(1, 11)) [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] \u0026gt;\u0026gt;\u0026gt; list(range(0, 30, 5)) [0, 5, 10, 15, 20, 25] \u0026gt;\u0026gt;\u0026gt; list(range(0, 10, 3)) [0, 3, 6, 9] \u0026gt;\u0026gt;\u0026gt; list(range(0, -10, -1)) [0, -1, -2, -3, -4, -5, -6, -7, -8, -9] \u0026gt;\u0026gt;\u0026gt; list(range(0)) [] \u0026gt;\u0026gt;\u0026gt; list(range(1, 0)) [] String Ref: class str\n# class str(object=\u0026#39;\u0026#39;) # class str(object=b\u0026#39;\u0026#39;, encoding=\u0026#39;utf-8\u0026#39;, errors=\u0026#39;strict\u0026#39;) # Frequently used str.count(sub[, start[, end]]) str.endswith(suffix[, start[, end]]) str.format(*args, **kwargs) str.index(sub[, start[, end]]) str.isalnum() str.isalpha() str.isdigit() str.islower() str.isspace() str.isupper() str.join(iterable) str.lower() str.replace(old, new[, count]) str.split(sep=None, maxsplit=- 1) str.startswith(prefix[, start[, end]]) str.swapcase() str.upper() More about formatting: Format String Syntax\nSet/HashSet # class set([iterable]) # Use a comma-separated list of elements within braces: {\u0026#39;jack\u0026#39;, \u0026#39;sjoerd\u0026#39;} # Use a set comprehension: {c for c in \u0026#39;abracadabra\u0026#39; if c not in \u0026#39;abc\u0026#39;} # Use the type constructor: set(), set(\u0026#39;foobar\u0026#39;), set([\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;foo\u0026#39;]) # Frequently used len(s) x in s x not in s union(*others) set | other | ... intersection(*others) set \u0026amp; other \u0026amp; ... add(elem) # Add element elem to the set. remove(elem) # Remove element elem from the set. Raises KeyError if elem is not contained in the set. discard(elem) # Remove element elem from the set if it is present. pop() # Remove and return an arbitrary element from the set. Raises KeyError if the set is empty. clear() # Remove all elements from the set. Map/HashMap - dict Mapping Types - dict\na = dict(one=1, two=2, three=3) b = {\u0026#39;one\u0026#39;: 1, \u0026#39;two\u0026#39;: 2, \u0026#39;three\u0026#39;: 3} c = dict(zip([\u0026#39;one\u0026#39;, \u0026#39;two\u0026#39;, \u0026#39;three\u0026#39;], [1, 2, 3])) d = dict([(\u0026#39;two\u0026#39;, 2), (\u0026#39;one\u0026#39;, 1), (\u0026#39;three\u0026#39;, 3)]) e = dict({\u0026#39;three\u0026#39;: 3, \u0026#39;one\u0026#39;: 1, \u0026#39;two\u0026#39;: 2}) f = dict({\u0026#39;one\u0026#39;: 1, \u0026#39;three\u0026#39;: 3}, two=2) a == b == c == d == e == f # True list(d) # Return a list of all the keys used in the dictionary d. len(d) # Return the number of items in the dictionary d. d[key] # Return the item of d with key \u0026#39;key\u0026#39;. Raises a KeyError if key is not in the map. d[key] = value # Set d[key] to value. del d[key] # Remove d[key] from d. Raises a KeyError if key is not in the map. key in d # Return True if d has a key key, else False. key not in d # Equivalent to not key in d. iter(d) # Return an iterator over the keys of the dictionary. This is a shortcut for iter(d.keys()). clear() # Remove all items from the dictionary. classmethod fromkeys(iterable[, value]) # Create a new dictionary with keys from iterable and values set to value. get(key[, default]) # Return the value for key if key is in the dictionary, else default. If default is not given, it defaults to None, so that this method never raises a KeyError. items() # Return a new view of the dictionary’s items ((key, value) pairs). See the documentation of view objects. keys() # Return a new view of the dictionary’s keys. See the documentation of view objects. pop(key[, default]) # If key is in the dictionary, remove it and return its value, else return default. If default is not given and key is not in the dictionary, a KeyError is raised. popitem() # Remove and return a (key, value) pair from the dictionary. Pairs are returned in LIFO order. \u0026gt;\u0026gt;\u0026gt; d = {\u0026#34;one\u0026#34;: 1, \u0026#34;two\u0026#34;: 2, \u0026#34;three\u0026#34;: 3, \u0026#34;four\u0026#34;: 4} \u0026gt;\u0026gt;\u0026gt; d {\u0026#39;one\u0026#39;: 1, \u0026#39;two\u0026#39;: 2, \u0026#39;three\u0026#39;: 3, \u0026#39;four\u0026#39;: 4} \u0026gt;\u0026gt;\u0026gt; list(d) [\u0026#39;one\u0026#39;, \u0026#39;two\u0026#39;, \u0026#39;three\u0026#39;, \u0026#39;four\u0026#39;] \u0026gt;\u0026gt;\u0026gt; list(d.values()) [1, 2, 3, 4] \u0026gt;\u0026gt;\u0026gt; d[\u0026#34;one\u0026#34;] = 42 \u0026gt;\u0026gt;\u0026gt; d {\u0026#39;one\u0026#39;: 42, \u0026#39;two\u0026#39;: 2, \u0026#39;three\u0026#39;: 3, \u0026#39;four\u0026#39;: 4} \u0026gt;\u0026gt;\u0026gt; del d[\u0026#34;two\u0026#34;] \u0026gt;\u0026gt;\u0026gt; d[\u0026#34;two\u0026#34;] = None \u0026gt;\u0026gt;\u0026gt; d {\u0026#39;one\u0026#39;: 42, \u0026#39;three\u0026#39;: 3, \u0026#39;four\u0026#39;: 4, \u0026#39;two\u0026#39;: None} \u0026gt;\u0026gt;\u0026gt; d = {\u0026#34;one\u0026#34;: 1, \u0026#34;two\u0026#34;: 2, \u0026#34;three\u0026#34;: 3, \u0026#34;four\u0026#34;: 4} \u0026gt;\u0026gt;\u0026gt; d {\u0026#39;one\u0026#39;: 1, \u0026#39;two\u0026#39;: 2, \u0026#39;three\u0026#39;: 3, \u0026#39;four\u0026#39;: 4} \u0026gt;\u0026gt;\u0026gt; list(reversed(d)) [\u0026#39;four\u0026#39;, \u0026#39;three\u0026#39;, \u0026#39;two\u0026#39;, \u0026#39;one\u0026#39;] \u0026gt;\u0026gt;\u0026gt; list(reversed(d.values())) [4, 3, 2, 1] \u0026gt;\u0026gt;\u0026gt; list(reversed(d.items())) [(\u0026#39;four\u0026#39;, 4), (\u0026#39;three\u0026#39;, 3), (\u0026#39;two\u0026#39;, 2), (\u0026#39;one\u0026#39;, 1)] Counter A Counter is a dict subclass for counting hashable objects.\n# class collections.Counter([iterable-or-mapping]) c = Counter() # a new, empty counter c = Counter(\u0026#39;gallahad\u0026#39;) # a new counter from an iterable c = Counter({\u0026#39;red\u0026#39;: 4, \u0026#39;blue\u0026#39;: 2}) # a new counter from a mapping c = Counter(cats=4, dogs=8) # a new counter from keyword args c = Counter([\u0026#39;eggs\u0026#39;, \u0026#39;ham\u0026#39;]) c[\u0026#39;bacon\u0026#39;] # count of a missing element is zero # 0 c = Counter(a=4, b=2, c=0, d=-2) sorted(c.elements()) # [\u0026#39;a\u0026#39;, \u0026#39;a\u0026#39;, \u0026#39;a\u0026#39;, \u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;b\u0026#39;] c.total() # total of all counts c.clear() # reset all counts list(c) # list unique elements set(c) # convert to a set dict(c) # convert to a regular dictionary c.items() # convert to a list of (elem, cnt) pairs Counter(dict(list_of_pairs)) # convert from a list of (elem, cnt) pairs c.most_common()[:-n-1:-1] # n least common elements +c # remove zero and negative counts Tree Lambda Queue queue — A synchronized queue class\nqueue.Queue(maxsize=0) # Constructor for a FIFO queue. queue.LifoQueue(maxsize=0) # Constructor for a LIFO queue, i.e. stack. queue.PriorityQueue(maxsize=0) # Constructor for a priority queue. q = Queue() q.qsize() q.empty() q.full() # when size \u0026gt; 0 q.put(val) q.get() # pop Priority queue heap doc\n# method 1 q = PriorityQueue() q.put((3, \u0026#39;c\u0026#39;)) q.put((2, \u0026#39;b\u0026#39;)) while not q.empty(): item = q.get() print(item) # method 2 pq = [] heappush(pq, (3, \u0026#39;c\u0026#39;)) item = heappop() # O(n) heapify an array/list heapify(pq) Regex Numeric/Math module random.randrange(stop) random.randrange(start, stop[, step]) # Return a randomly selected element from range(start, stop, step). This is equivalent to choice(range(start, stop, step)), but doesn’t actually build a range object. random.randint(a, b) # Return a random integer N such that a \u0026lt;= N \u0026lt;= b. Alias for randrange(a, b+1). Official docs Python docs main page\nBuild-in Types\nBuild-in Functions\n","permalink":"/posts/python-basics-for-algorithm-practices/","summary":"Actively updating\u0026hellip;\nThis post assume the reader to be familiar with at least one of other popular used programming language, preferably Java and C++; or know python before and just need refresh.\nArray Python\u0026rsquo;s array type is similar to C++\u0026rsquo;s vector or Java\u0026rsquo;s ArrayList.\nAnd for algorithm practice we usually use list, which will be introduced in next section.\nRef: array — Efficient arrays of numeric values\n# create an array array(\u0026#39;u\u0026#39;, \u0026#39;hello \\u2641\u0026#39;) array(\u0026#39;l\u0026#39;, [1, 2, 3, 4, 5]) array(\u0026#39;d\u0026#39;, [1.","title":"Python basics for algorithm practices"},{"content":"When we practice LeetCode questions, we always need to write a helper recursive function outside the main solution function. For example, to find the max value in a binary tree, we can have the following codes: (method-1)\nclass Solution { // pre-order DFS void helper(TreeNode *root, int \u0026amp;ret) { if (!root) return; ret = std::max(ret, root-\u0026gt;val); helper(root-\u0026gt;left); helper(root-\u0026gt;right); } public: int findMax(TreeNode *root) { int maxval = std::numeric_limits\u0026lt;int\u0026gt;::min(); helper(root, maxval); return maxval; } }; Sometimes we don\u0026rsquo;t want to write the helper outside our working function, i.e. findMax in previous example. The reasons can be different. For me, I don\u0026rsquo;t want to add the reference type parameter ret. In fact, for questions in LeetCode, we always need to add many reference type parameters, such as problems related to backtracking. Since C++11, we can write lambda, further more, recursive lambda locally. This relies on the standard function type. (method-2)\nclass Solution { public: int findMax(TreeNode *root) { int maxval = std::numeric_limits\u0026lt;int\u0026gt;::min(); // pre-order DFS function\u0026lt;void(TreeNode*)\u0026gt; helper = [\u0026amp;](TreeNode *root) { if (!root) return; maxval = std::max(ret, root-\u0026gt;val); helper(root-\u0026gt;left); helper(root-\u0026gt;right); }; helper(root); return maxval; } }; In the code above, [\u0026amp;] indicates the helper lambda to capture the local variables (by references) before the statement. Actually, for the inside call of helper, it also references the name of itself. That\u0026rsquo;s why we cannot change function\u0026lt;void(TreeNode*)\u0026gt; to auto. If we use auto, the call to helper inside the function body will make it impossible for compiler to deduce the type of helper.\nBut we really do not want function\u0026lt;void(TreeNode*)\u0026gt;, because it is too long and it has the same content as (TreeNode *root) later. The reason we want to write lambda is to reduce length, but method-2 seems to make it longer (actually running time also becomes longer).\nLuckily, since C++14, we have a better way to do it, that is the generic lambda. We still cannot use helper inside the lambda body for same reason. But taking advantages of generic parameter, here we have a more tricky way to do it. (method-3)\nclass Solution { public: int findMax(TreeNode *root) { int maxval = std::numeric_limits\u0026lt;int\u0026gt;::min(); // pre-order DFS auto helper = [\u0026amp;](auto \u0026amp;\u0026amp;self, auto root) { if (!root) return; maxval = std::max(ret, root-\u0026gt;val); self(self, root-\u0026gt;left); self(self, root-\u0026gt;right); }; helper(helper, root); return maxval; } }; This code can successfully compile and result in relatively same runtime efficiency as method-1. We avoid the call to helper inside the body. Instead, we introduce an r-value reference parameter called self. In this way, compiler can deduce out the type of helper when we call it later by helper(helper, root).\nauto \u0026amp;\u0026amp;self can also be const auto \u0026amp;self to fit both l-value and r-value.\nThe reason why method-2 is slightly slower than method-1 and method-3 might be that capture by [\u0026amp;] has more overheads than directly pass the r-value reference argument. For more details, please refer to the reference links below.\nReferences Recursive lambda functions in C++14 - Stack Overflow\nRecursive lambdas in C++(14) - Pedro Melendez\n","permalink":"/posts/generic-recursive-lambda-in-c++14/","summary":"When we practice LeetCode questions, we always need to write a helper recursive function outside the main solution function. For example, to find the max value in a binary tree, we can have the following codes: (method-1)\nclass Solution { // pre-order DFS void helper(TreeNode *root, int \u0026amp;ret) { if (!root) return; ret = std::max(ret, root-\u0026gt;val); helper(root-\u0026gt;left); helper(root-\u0026gt;right); } public: int findMax(TreeNode *root) { int maxval = std::numeric_limits\u0026lt;int\u0026gt;::min(); helper(root, maxval); return maxval; } }; Sometimes we don\u0026rsquo;t want to write the helper outside our working function, i.","title":"Generic recursive lambda in C++14"},{"content":"Introduction This article is mainly talking about the difference between interface and abstract class, which is a frequently asked questions at interview. I will discuss Java first, and then C++.\nPersonally, I am more familiar with C++, although I can write Java. So at the time one friend asked me about the question, I was shocked. I did not know \u0026ldquo;interface\u0026rdquo; at all. But after searching around, I learned that \u0026ldquo;interface\u0026rdquo; and \u0026ldquo;abstract class\u0026rdquo; are somehow ideas of OOP (especially, Java OOP). C++ can get same things. But it does not have \u0026ldquo;interface\u0026rdquo; and \u0026ldquo;abstract\u0026rdquo; keyword due to several reasons, such as functional reason, historical reason, and design choice.\nInterface and abstract class in Java Interface and abstract class are two different ideas in Java. Interface is only some patterns, with only constants and method names (stubs). Abstract class is class, although not instantiable, besides abstract methods, it can have constants, general methods (with definition), value types.\nAnother important difference is that a class can implement multiple interfaces (somehow multiple inheritance), while all classes in Java do not support multiple inheritance.\nCode example:\n// interface example interface myInterface { void method1(); int method2(); } class myClass implements myInterface { int value; void method1() { System.out.println(\u0026#34;123\u0026#34;); } int method2() { return this.value; } } // abstract class example abstract class myAbclass { // abstract method abstract void method1(); int value; int method2() { return this.value; } } class myClass extends myAbclass { void method1() { System.out.println(\u0026#34;123\u0026#34;); } } Here I don\u0026rsquo;t talk much about the speed (I don\u0026rsquo;t know much about the implementation details of these two in JVM).\nGenerally speaking, because interface doesn\u0026rsquo;t have real implementations and general local values, it can be faster than abstract class. Then how about an abstract class with only abstract methods, compared to the corresponding interface? I am not sure. But basically, they should be similar under good optimization of Java compiler and JVM.\nChoice between them should not (mainly) depend on speed, but what functionalities you need in your code.\nThe topic in C++ As a powerful OOP language, C++ can get same functionality of interface and abstract class just through abstract class declaration. Because C++ class supports multiple inheritance, it doesn\u0026rsquo;t need specific keywords \u0026ldquo;interface\u0026rdquo;.\nIn C++, Abstract classes act as expressions of general concepts from which more specific classes can be derived. You cannot create an object of an abstract class type; however, you can use pointers and references to abstract class types.\nA class that contains at least one pure virtual function is considered an abstract class. Classes derived from the abstract class must implement the pure virtual function or they, too, are abstract classes.\nHere is the code example:\n// interface example (actually also abstract class) class myInterface { public: // pure virtual methods virtual void method1() = 0; // pure virtual destructor // implementation needed outside virtual ~myInterface() = 0; // or just use // virtual ~myInterface() {} }; // abstract class example class myAbclass { public: // general virtual methods virtual void method1(); // general methods void method2(); // pure virtual methods // make myAbclass abstract class // so it is not instantiable virtual void method3() = 0; // virtual destructor virtual ~myAbclass() {} }; Also you can refer Bjarne\u0026rsquo;s FAQ about this: Do we really need multiple inheritance?\nMore about C++ I will introduce static polymorphism of C++ in my next article.\nInterfaces in Go Unlike Java and C++, Go does not have class. Instead Go only has struct and methods (functions with receiver argument) which is similar to the methods in Java and C++. Go\u0026rsquo;s interface type is defined as a set of method signatures. And interfaces are implement implicitly. All of these features make Go a light weight OOP language or not strictly an OOP language.\nHere is a brief example from official tutorial:\npackage main import \u0026#34;fmt\u0026#34; type I interface { M() } type T struct { S string } // This method means type T implements the interface I, // but we don\u0026#39;t need to explicitly declare that it does so. func (t T) M() { fmt.Println(t.S) } func main() { var i I = T{\u0026#34;hello\u0026#34;} i.M() } Reference links What is the difference between an interface and abstract class?\nHow do you declare an interface in C++?\nAbstract Class vs Interface in C++\nAbstract Classes (C++)\nA tour of Go - Interfaces are implemented implicitly\n","permalink":"/posts/differences-between-an-interface-and-abstract-class/","summary":"Introduction This article is mainly talking about the difference between interface and abstract class, which is a frequently asked questions at interview. I will discuss Java first, and then C++.\nPersonally, I am more familiar with C++, although I can write Java. So at the time one friend asked me about the question, I was shocked. I did not know \u0026ldquo;interface\u0026rdquo; at all. But after searching around, I learned that \u0026ldquo;interface\u0026rdquo; and \u0026ldquo;abstract class\u0026rdquo; are somehow ideas of OOP (especially, Java OOP).","title":"Differences between an interface and abstract class"},{"content":"Introduction This article mainly focus on how to run a HTTP server inside a docer container. The key point is port mapping.\nBasic setup I skipped installation of docker at ubuntu here. Please refer to my last docker note.\nFor server example, I have some in my github.\nC version\nPython flask\nRust version\nHere I choose Rust version for example.\nRun Rust docker # pull rust official image to local docker pull rust # run a container docker run -itd -p 8080:5000 --name httpserver rust Here -itd means \u0026lsquo;interactive\u0026rsquo;, \u0026lsquo;TTY\u0026rsquo; and \u0026lsquo;detached\u0026rsquo;, which are running options of container. -p set the port mapping. 8080 is our server port, 5000 is the container port.\nSo we need set the server in side container to listen http request at port 5000.\nBecause we run the container in detached mode, first we need attach to the container (go into it).\n# httpserver is our container name docker attach httpserver Inside container we can use ctrl-p then ctrl-q to detach again.\nAnother way to go into the container is open another bash.\n# -it has same meaning as \u0026#39;docker run\u0026#39; docker exec -it httpserver bash Since we have one more bash now, it\u0026rsquo;s OK to close one bash.\nSetup server Now assume we are already in the container. Vim and Git might be needed. But I skip their installation here.\nTo fetch and run the server:\n# clone source code from my github git clone https://github.com/ysmiles/ServerClientExamples-Rust # compile and run cd tcptime/ cargo run It might be necessary to change line 11 for main.rs at src folder from \u0026lsquo;TcpListener::bind(\u0026ldquo;127.0.0.1:8000\u0026rdquo;)\u0026rsquo; to \u0026lsquo;TcpListener::bind(\u0026ldquo;0.0.0.0:5000\u0026rdquo;)\u0026rsquo; before compiling. Because we want this server works from \u0026lsquo;outside\u0026rsquo; view, and before we mapped some port to container port 5000.\nNow detach from the container and test at server local to see the result.\n# curl can give a http request to a specific address curl http://0.0.0.0:8080 The output should be something like below:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Hello!\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Hello!\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt;Hi from Rust\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Current server time is:\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;2017-12-06 11:20:17\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Then test remotely. Here is my page, you can test it. This http serve will return the server machine local time.\nhttp://138.68.5.16:8080/\n","permalink":"/posts/http-server-inside-a-docker-container/","summary":"Introduction This article mainly focus on how to run a HTTP server inside a docer container. The key point is port mapping.\nBasic setup I skipped installation of docker at ubuntu here. Please refer to my last docker note.\nFor server example, I have some in my github.\nC version\nPython flask\nRust version\nHere I choose Rust version for example.\nRun Rust docker # pull rust official image to local docker pull rust # run a container docker run -itd -p 8080:5000 --name httpserver rust Here -itd means \u0026lsquo;interactive\u0026rsquo;, \u0026lsquo;TTY\u0026rsquo; and \u0026lsquo;detached\u0026rsquo;, which are running options of container.","title":"HTTP server inside a docker container"},{"content":"1. Introduction This is a small project to learn basics of TensorFlow and solving time series problems with RNN. For more details, please refer to the codes at Github: ysmiles.\n1.1 Time-series A time series is a series of data points indexed (or listed or graphed) in time order. Most commonly, a time series is a sequence taken at successive equally spaced points in time. Thus it is a sequence of discrete-time data.\n1-D time series examples include weather information, stock exchange information, voice information (if we only consider strength or frequency).\nBitcoin price is similar to stocks but may changes more fast. For example, at the beginning of this month (2017-10-01) it was around $4400, and now (2017-10-20) it is almost $6000, with the increasing ratio of more than 36%. So accurate prediction of future prices of Bitcoin is very attractive.\n1.2 Recurrent Neural Networks (RNN) Recurrent Neural Networks (RNNs) are called recurrent because they perform the same computations for all elements in a sequence of inputs.\nRNNs are good at analyze time series data, such as stock prices, and provide forecasts. This is why this homework chose this method.\nRNNs can also take sentences, documents, or audio, etc as input, making them extremely useful for natural language processing (NLP) systems, such as automatic translation, speech-to-text, or sentiment analysis. Overall this method can be applied in many situations where a sequence of data points exists.\nThis image shows the RNN architecture.\nxt is the input at time step t. For example, in this project x1 could be the first price of Bitcoin in a specific time period. st is the hidden state at time step tn and is calculated based on the previous hidden state and the input at the current step, using an activation function. St-1 is usually initialized to zero. ot is the output at step t. For example, if we wanted to predict the next value in a sequence, it would be a vector of probabilities across our time series.\nRNN cells are developed on the notion that one input is dependent on the previous input by having a hidden state, or memory, that captures what has been seen so far. The value of the hidden state at any point in time is a function of the value of the hidden state at the previous time step and the value of the input at the current time step. In this project, I divide time serial data points as 20 days block. Actually what the whole program do is to finding feature and use 20 days price to predict price of 21st day.\n2. Implementation 2.1 Installation of Tensorflow Install Tensorflow at a linux server or desktop is not that hard. Here is a summary of installation bach commands from official guide.\n# for ubuntu $ sudo apt-get install python3-pip python3-dev python-virtualenv # for Python 3.n $ virtualenv --system-site-packages -p python3 ~/tensorflow # for Python 3.n $ source ~/tensorflow/bin/activate # bash, sh, ksh, or zsh # Assume at least have python 3.5 (tensorflow)$ pip3 install --upgrade tensorflow # for Python 3.n One note here is to use virtualenv, which provide a separated python environment to tensorflow. The goodness of this is that inside this environment, we do not need to care python or python3, pip or pip3, etc. In my case, it only has python 3 inside. Because linux servers always have some python 2 version(s), which is quite annoying for stricting version every time. So this virtualenv does help. Just remember to activate it as showed above.\nI also test this project at Windows 10. At the beginning I installed it in Anaconda, but it turned out to be with some problems. So I uninstalled Anaconda and installed official python 3.6 and used native installation with pip. It worked well.\nAt Windows system, here is another note. For some packages, the pip installation requires outside library that generally windows does not have. To solve this, one could go to following page to download compiled version of packages and then use local pip install.\nhttp://www.lfd.uci.edu/~gohlke/pythonlibs/\n2.2 Data preparation 2.2.1 Fetching data To meet the requirement \u0026ldquo;load data from remote\u0026rdquo;, there are two basic choices. One is build a database, insert data, and using some api (say MySQL connector) to fetching data. The other one is to use some opened/paid and well-defined api to get structured or semi-structured data.\nThe first one is more practical, but the data source cannot be validated. I can randomly generate some data and insert it into database, then fetching it to local. But in this way, it is kind of similar as directly generate data locally.\nI chose the latter one, i.e. using an api already exists.\nAt the beginning, actually I planned to use some weather api doing temperature forecasting. But the free apis always only provide current data. The history data is somehow difficult to get.\nLuckily, for my planB (this one with Bitcoin), some websites provide good apis with history data. For example, conindesk.\nPython official suggests an api of fetching Bitcoin data. This package is shown in \u0026ldquo;exchanges\u0026rdquo; folder. It is written for python 2. I have modified some files to make it compatible with python 3.\nThe mainly used api function (modified) is as follow:\ndef get_historical_data_as_dict(cls, start=\u0026#39;2017-01-01\u0026#39;, end=None): if not end: end = get_datetime() data = cls._get_historical_data(start, end) prices = data[\u0026#39;bpi\u0026#39;] # prices = {k: Decimal(str(v)) for (k,v) in prices.items()} prices = OrderedDict(sorted(prices.items(), key=lambda t: t[0])) return prices OrderedDict is used for make the dictionary sorted. Because I noticed that the return value from original message is not shown as the time order. For more details, please refer to coindesk.py in folder \u0026ldquo;exchanges\u0026rdquo;.\nFor easy calling, I wrapped it in getBCdata in datafetch.py.\ndef getBCdata(start=\u0026#39;2017-01-01\u0026#39;, end=None): return CoinDesk.get_historical_data_as_dict(start, end) 2.2.2 Preparation Preparation can further divide to two small part.\nstartdate = \u0026#39;2017-01-01\u0026#39; enddate = \u0026#39;2017-10-20\u0026#39; rng = pd.date_range(start=startdate, end=enddate, freq=\u0026#39;D\u0026#39;) ts = getBCdata(startdate, enddate) # ts = pd.Series([v for (k, v) in ts.items()]) TS = np.array([v for (k, v) in ts.items()]) This part calls predefined api and get data.\nnum_periods = 20 f_horizon = 1 # forecast horizon, one period into the future x_data = TS[:(len(TS) - (len(TS) % num_periods))] x_batches = x_data.reshape(-1, 20, 1) y_data = TS[1:(len(TS) - (len(TS) % num_periods)) + f_horizon] y_batches = y_data.reshape(-1, 20, 1) # print(len(x_batches)) print(\u0026#39;x batches shape\u0026#39;, x_batches.shape) # print(x_batches[0:2]) # print(y_batches[0:1]) print(\u0026#39;y batches shape\u0026#39;, y_batches.shape) def test_data(series, forecast, num_periods): test_x_setup = TS[-(num_periods + forecast):] testX = test_x_setup[:num_periods].reshape(-1, 20, 1) testY = TS[-(num_periods):].reshape(-1, 20, 1) return testX, testY X_test, Y_test = test_data(TS, f_horizon, num_periods) print(\u0026#39;Test shape\u0026#39;, X_test.shape) # print(X_test) This part parses the data to 20-day blocks and prepare to do training. Also in this part it chose last 20 days data for testing. (If the total days mod 20 is not 0, at least some days were not taken as training data, and actually it just predicted one day more).\n2.3 Data processing This part is roughly similar to the RNN example from MapR.\nBasically, it did some fundamental setting of Tensorflow session and data.\nTraining activation function was chosen as \u0026ldquo;relu\u0026rdquo;. The mean square error was chosen as the loss function. The basic AdamOptimizer was used for minimizing loss function result.\nFor more details please refer the code and comments.\n# didn\u0026#39;t have any previous graph objects running, but this would reset the graphs tf.reset_default_graph() # setted before # num_periods = 20 #number of periods per vector we are using to predict one period ahead inputs = 1 # number of vectors submitted hidden = 500 # number of neurons we will recursively work through, can be changed to improve accuracy output = 1 # number of output vectors # create variable objects X = tf.placeholder(tf.float32, [None, num_periods, inputs]) y = tf.placeholder(tf.float32, [None, num_periods, output]) basic_cell = tf.contrib.rnn.BasicRNNCell( num_units=hidden, activation=tf.nn.relu) # create our RNN object rnn_output, states = tf.nn.dynamic_rnn( basic_cell, X, dtype=tf.float32) # choose dynamic over static learning_rate = 0.001 # small learning rate so we don\u0026#39;t overshoot the minimum # change the form into a tensor stacked_rnn_output = tf.reshape(rnn_output, [-1, hidden]) # specify the type of layer (dense) stacked_outputs = tf.layers.dense(stacked_rnn_output, output) # shape of results outputs = tf.reshape(stacked_outputs, [-1, num_periods, output]) # define the cost function which evaluates the quality of our model loss = tf.reduce_sum(tf.square(outputs - y)) optimizer = tf.train.AdamOptimizer( learning_rate=learning_rate) # gradient descent method # train the result of the application of the cost_function training_op = optimizer.minimize(loss) init = tf.global_variables_initializer() # initialize all the variables epochs = 2000 # number of iterations or training cycles, includes both the FeedFoward and Backpropogation with tf.Session() as sess: init.run() for ep in range(epochs): sess.run(training_op, feed_dict={X: x_batches, y: y_batches}) The testing of (with last 20 days results) is quite easy. To get predicted data:\ny_pred = sess.run(outputs, feed_dict={X: X_test}) 3. Visualization 3.1 Windows/Linux The main output of Windows/Linux platform. Here we have four images, the test result of last period of days, loss function (mean square error) result, CPU usage, and memory usage.\nFor discussion of results please refer to part 4 of this article.\nHere are some screenshots.\n3.2 Web interface The web interface is implemented with Tensorboard from Tensorflow.\nThe first screenshot shows the training process, while other images are pretty similar to general PC platform.\nFor detailed implementation, please refer the code.\n4. Discussion and Summary Result discussion\nWe can see the prediction of last 20 prices of recently day looks similar to true value on trend. Overall the loss decrease fast at the beginning but the decreasing rate speed down later at more running cycles. For each data point, it is still not that accurate. MSE also can support this for still keeping at relatively large value. It should not be enough to get profits by this easy model. More optimizations need to be done, not only to increase looping times or the hidden middle layers. CPU usage is normal for training process. I am using an Intel i7-6700K CPU (4 core, 8 hyperthreads) with 16G DDR4 RAM. Memory usage also looks good, running more cycles did not cost much more memory. By going through all of those steps, I learned the basics of machine learning steps as well as got to know the working logic of Tensorflow.\nThe final visualization adjusting/debugging and documenting costed more time than I expected. Next time I need to leave more time for those steps.\nReference https://en.wikipedia.org/wiki/Time_series\nhttps://medium.com/google-cloud/how-to-do-time-series-prediction-using-rnns-and-tensorflow-and-cloud-ml-engine-2ad2eeb189e8\nhttps://mapr.com/blog/deep-learning-tensorflow/\nhttps://github.com/dursk/bitcoin-price-api\n","permalink":"/posts/bitcoin-price-prediction/","summary":"1. Introduction This is a small project to learn basics of TensorFlow and solving time series problems with RNN. For more details, please refer to the codes at Github: ysmiles.\n1.1 Time-series A time series is a series of data points indexed (or listed or graphed) in time order. Most commonly, a time series is a sequence taken at successive equally spaced points in time. Thus it is a sequence of discrete-time data.","title":"Bitcoin price prediction"},{"content":"Introduction The purpose of this article is very simple. Just run a gRPC example in different Docker containers. Since it really costed me a lot of time, I\u0026rsquo;d like to keep records here.\nDocker is a very useful container tool, which can be considered as a light virtualization technique comparing to traditional virtual machine tools such as Virtualbox, VMware, etc. For more details about the differences between them, as well as the Docker\u0026rsquo;s basics, please refer this Stack Overflow question, the Digital Ocean tutorial, or the Docker official introduction.\nInstall Docker The official tutorial is good enough for Ubuntu. This alternative installation tutorial from Digital Ocean tutorials also introduces some basic commands and tips, such as executing the docker command without sudo. I tested them at an Ubuntu 16.04 x64 server, and everything went well.\nInstall commands for lazy guys who also use Ubuntu x64 release:\nsudo apt-get update sudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ software-properties-common curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository \\ \u0026#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs) \\ stable\u0026#34; sudo apt-get update sudo apt-get install docker-ce Install gRPC at local host OS Actually this step is not needed if you want to do all the work inside containers. But with local installed package, we can test host-to-container communications through gRPC API.\nHere, I explicitly use python3.\npython3 -m pip install grpcio or just\npip3 install grpcio Get grpc/python Docker image Here since I did not build my own Docker image but directly use the official one.\nTo get latest Python 3 environment with gRPC, run\ndocker pull grpc/python:1.4 Note here \u0026ldquo;1.4\u0026rdquo; tag is necessary, otherwise it will pull \u0026ldquo;latest\u0026rdquo; one, which is Python 2.7 environment.\nGet gRPC examples Follow the gRPC official guide, we can get the example source code.\n# Clone the repository to get the example code: git clone -b v1.6.x https://github.com/grpc/grpc # Navigate to the \u0026#34;hello, world\u0026#34; Python example: cd grpc/examples/python/helloworld Run in containers Run the RPC server in docker container\ndocker run -itd --rm --name my-running-server \\ -v \u0026#34;$PWD\u0026#34;:/usr/src/myapp -w /usr/src/myapp \\ grpc/python:1.4 python3 greeter_server.py Here \u0026ldquo;d\u0026rdquo; in -itd means \u0026ldquo;detach\u0026rdquo;. So we can let the container there and run other commands. We can use docker attach my-running-server to see what is going on for server container, and CTRL-p CTRL-q to detach again.\nThen, we can check docker default network using\ndocker network inspect bridge From the output, the server container should have the IP \u0026ldquo;174.17.0.2\u0026rdquo; at network \u0026ldquo;bridge\u0026rdquo;.\nSmall modify from \u0026ldquo;localhost\u0026rdquo; to \u0026ldquo;174.17.0.2\u0026rdquo; is required.\ndef run(): # channel = grpc.insecure_channel(\u0026#39;localhost:50051\u0026#39;) channel = grpc.insecure_channel(\u0026#39;174.17.0.2:50051\u0026#39;) ... In same terminal (because I was using ssh connection to a server), run the client\ndocker run -it --rm --name my-running-client \\ -v \u0026#34;$PWD\u0026#34;:/usr/src/myapp -w /usr/src/myapp \\ grpc/python:1.4 python3 greeter_client.py We can get correct output.\nAlso we can run client locally.\npython3 greeter_client.py The output should be same.\n","permalink":"/posts/run-a-basic-grpc-example-with-docker/","summary":"Introduction The purpose of this article is very simple. Just run a gRPC example in different Docker containers. Since it really costed me a lot of time, I\u0026rsquo;d like to keep records here.\nDocker is a very useful container tool, which can be considered as a light virtualization technique comparing to traditional virtual machine tools such as Virtualbox, VMware, etc. For more details about the differences between them, as well as the Docker\u0026rsquo;s basics, please refer this Stack Overflow question, the Digital Ocean tutorial, or the Docker official introduction.","title":"Run a basic gRPC example with Docker"},{"content":"每每看完一部有意思的作品，总有些想说的。早有意写点评论，最初是想写长，后来发现写长有两个弊端，一个是花的时间较多；二是自身的文字功力也不够。以防无病呻吟，这次尝试一下简要些的评论。\n射雕（2017） 金庸先生的作品我向来是非常推崇的，他的所有武侠作品，我应该都有拜读过。其中最喜爱的当属《天龙八部》和《笑傲江湖》两部，在此不表。喜爱天龙八部的，可以看看水天王x的解读。\n说到射雕三部曲，是我最先看的金庸先生的作品。不过实际上，初中时机缘巧合下，我先看的是《神雕侠侣》，之后才是《射雕英雄传》和《倚天屠龙记》。就小说本身来讲，我认为射雕是最能代表金庸武侠小说整个基调的作品，整部给人的感觉，怎么说呢，“中正”似乎比较合适。无论是从角色塑造，还是剧情安排情节设计，我觉得都是中规中矩（褒义，也并不代表没有起承转合和悬念等，只是相对于其之后的一些作品，没有那么出彩而已）。\n此次是评今年新拍的电视剧，小说那边就暂时放下。首先给个整体评分，6.5/10。这个分数，代表着及格了，不至于说是拍的很烂，但许多方面，尚有许多可以提高的空间。\n说到武侠，首先就来谈谈武术。打戏方面，整体还是很不错的。不得不说，不吹不黑，中国这边的（武术）动作指导确实领先世界。现今许多欧美大片里的打戏，也借鉴了中国这边打戏的“套路”，而不是以前的对殴，从而提高了观赏性。日本的奥特曼系列，在最近的几部剧场版里，似乎也请了中国的武术指导，贝利亚、塞罗、雷欧等的表现都远胜于当年他们本身的特设剧集。本次的射雕中，演员们看的出也是用心去学了这些，才造就了不错的观赏性。\n另一方面，特效。武术特效上，我认为需要批评。降龙十八掌等，打斗正酣时，突然就对起波来了，非常出戏，而且毫无气势。可能剧组人员有些误解，认为卷起落叶、风沙、湖水，再对波就是有气势了。然而并不是那样，我看的是挺尴尬。好的例子比如电影《功夫》中的武术特效，并不太多而恰到好处的展现了气势和威力；再比如老版的天龙，射雕中，特效水平并没有那么好，然而仍能感觉到很恰当。其他的，诸如郭靖的白雕，欧阳锋的蛇，欧阳锋逗鸟（教杨康轻功的时候），让人不禁想大呼“五毛特效”，出戏，减分。\n武术方面还有一点没有做到位，就是实力的展示。整个射雕中的武功水平，大致可以分为论剑级，高手级，一般级，杂粹级。华山论剑的洪七公、欧阳锋等属于论剑级，他们的武功，可以说是远高于江南七怪（单个一般级，合在一起高手级，全真七子评级大致相同而略高于江南七怪）这个级别的；铁掌帮帮主裘千仞（真）当属于高手级。郭靖最开始实力应该不太行，几乎就是略高于杂粹级，后来慢慢成长到论剑级，而这个成长在剧中体现的并不是太明显，可能是由于拍戏需要？似乎任何时候，郭靖和任何人都是强行五五开，比如和欧阳锋，比如和完颜洪烈手下那帮打杂的。想起风师弟的名言，“他的功力不在我之下”。 还有就是，郭靖降龙十八掌的学习，黄蓉打狗棒法的学习展示都不到位，首先学习过程就草草了事，另外学完了真的表现出区别了吗？\n再来谈谈演员。主角的选角扮相塑造，还算令人满意。郭靖方面，没有太明显的优缺点；黄蓉刚开始的小叫花扮相是有些惊艳到我了，后期的女装扮相反而没那么好。配音（这部剧配音演员和出演演员是不同的）整体也还行，黄蓉的声音很可爱。其他角色中，可能是由于到了这个年代，整体上偏胖，略出戏，真正的习武之人，身材走形应该没那么严重吧。并不是瞧不起胖子，我自己也胖，所以深切体会到了胖的劣势。黄药师的塑造还不错，邪劲儿展现出了一些，但还可以加强；欧阳锋也不错，差了点凶狠劲儿，当然台词中不断重复的“少废话”有时让人出戏。\n最令我不满意的，是老顽童的塑造。整部剧下来，感觉剧组是不是和老顽童有仇啊，简直把他塑造的跟个傻x一样。我们来看看老顽童的背景，他是前天下第一王重阳的师弟，本身功夫不低，再加之射雕中实际他已习得九阴真经全部，可以说是射雕中还存活于世的众人中，武功最高的了。这样的一个人，疯癫归疯癫，贪玩归贪玩儿，我是不认为其应该表现的像zz一样。另外，配音，台词中，一口一个“不好玩儿”也极其尴尬，有兴趣可以去体验。\n再聊聊剧情的起承转折。本次电视剧的剧情走向，大体和小说相同，至少我没有发现什么明显的区别。要说缺点，我觉得，杨康这个角色的塑造上，有时候转折太僵，不太符合逻辑。还有就是穆念慈为什么会喜欢杨康这一点的处理上，非常生硬，除了智商下线，似乎很难找到合理的解释。由于年代久远，我已不大记得清楚原著中是怎么描写的了，可能本来就是这样。欧阳锋欧阳克的许多表现也不到位，太浮夸。\n感情戏。射雕的感情戏，本也是可圈可点。原著中郭靖黄蓉恋情的起起伏伏，以及郭靖和华筝之间的爱恨纠葛，给我留下了很深的印象。而此次电视剧中，感情戏这一块，是要大大的扣分。可能由于某些不知名的局限，感觉剧组在刻意回避这一块。整体上感觉，就像几个小朋友在过家家一样，丝毫感受不到任何的刻骨铭心。没记错的话，两人手都很少牵，最亲密的接触大概是略像老友相见的拥抱，没有贴脸，没有贴额头，什么？你说吻戏，不存在的，会带坏小朋友哦。除了剧组决定的整个走向，演员的演技可能也不到位，就像两个小朋友在玩一样，略尴尬。\n音乐没什么好说的，大部分采用了《铁血丹心》的重新编曲，表现尚可。开始我觉得这是剧组是致敬经典，是想把剧拍好的先兆；后来发现，似乎有偷懒的嫌疑，省去不少经费啊，而且最终就算再烂，经典歌曲总不会被人喷。\n我为什么说剧组偷懒，那得看道具布景等。举个例子，在荒岛上，洪七公被欧阳锋所伤，然后和郭靖合计骗欧阳锋让其觉得七公功力已恢复；郭靖用空明拳劲就着锋利的匕首割松树（这点剧里实际没讲清楚），再让假装让洪七公掌击郭靖震断大树。这一段里，原著中描写，我记得至少得是碗口大的松树吧，而在剧中，什么玩意儿，几棵小树苗？不是我吹，我一脚都能蹬断的那种。再举个例子，丐帮集会推选新帮主，渲染的倒是挺重大，实际呢，就这么点人？再来一个例子，最后，所谓蒙古大军压境，驻扎在襄阳城外；也太寒碜了吧，总共有100人么？唯一到位一点的，当属之前一点郭靖立功那段（之后没有请求成吉思汗取消婚约而是取消屠城），攻城的壮烈场景表现还不错。\n射雕，当属被翻拍次数最多的武侠作品之一，经典毋庸置疑。今年的这部，之前也说了，属于刚刚及格，比不上一些经典演绎，但也不是一无是处。期待以后咱们能拍出更好的剧集。另外，也期待武侠小说界能有新的如射雕般长青的作品诞生。\n君の名は 《你的名字》这部新海诚监督的作品离最初上映已一年，其无论在日本还是海外（包括中国）的成就，大家有目共睹。我在前两天刚刚看，一方面是由于BD刚刚出，二是b站也有正版付费观看了。我选择了后者，个人评分给9/10。\n新海诚的大名早有耳闻，应该算是除了宫崎骏以外在中国最有名的日本动画电影监督了。然而实际上，君名是我看的第一部新海诚导演的动画电影（之前只看过他导演的番剧《她与她的猫》）。《秒速5厘米》，《言叶之庭》等等，暂且留着待补。\n之所以这样，有点像把好的东西留着，收藏起来，有机会慢慢享用。抑或是等合适的人一起分享，或是挚友，或是未来的恋人。\n我跟你们讲，单身狗被强塞一嘴狗粮很难受的。这次君名也是，看完了，但觉狗粮太甜，甜到齁了；只能感叹，“真好啊”。转念又一想，“醒醒吧，看脸的”。\n说回电影本身。君名的故事本身其实特别简单，无非是身体互换，到互相喜欢，到最后互相追寻找到对方，非常的套路。然而能驾驭住这类经典（另一方面也可以说是烂大街）的套路，方显导演的功力。\n电影一上来，毫不磨叽，直接就开始讲述身体互换的故事，30分钟后突然OP，以及时不时的一点小幽默，非常好的调节了节奏，让大家始终不至于走神。后期故事展开，以及寻求解决方案，也是一环套着一环，高潮迭起，整个100来分钟下来，可以说是一气呵成。\n电影的成功，除了本身的剧情、节奏，也离不开其出色的画面和配乐。新海诚的作品里面，画面精良随手截屏即壁纸的美名早已远扬。这次我也切实体验到了。而且，作为2d作画的动画电影，这是一大优势，精美的画面可以最大程度的反映出创作者天马行空的想象力，让观众体验到现实生活中几乎不存在的世界。我想这也是我之所以喜欢动画的本质原因之一。\n配乐自不必多说，除了恰到好处的BGM、音效以外，OP、ED和插入曲也曲曲传神，可谓享受。\n角色表演上，作画不必多提，必有大佬出力。声优的表现也很出色，说实话对于声优了解颇多的我对主角这两位声优了解甚少，所以他们是凭实打实的实力给我留下深刻印象的。尤其是男主声优神木隆之介，表现身体交换后那种娘娘的气质，真是神了。\n给9分，综上我认为这部动画在各个方面几乎做到了完美。少一分，是由于（可能是暂时）对我的人生、追番口味等并无太大影响。其他评分参考，客观的话，EVA在其诞生的背景下，我给9.5；在如今我看过很多动画后，以当下的标准，我给8.5。\n阿修罗 这部是一部挺老的动画电影了，我大概于今年三月左右看的。这是一部讲述乱世中人性的动画，可引人深思。在此就不草草给评分了，喜不喜欢，仁者见仁智者见智。\n整部作品的基调比较黯淡，这是来自于背景的设定。契合表现主题的画风也相对特殊，因此可能有些人不喜。\n主角阿修罗是一个乱世中的孤儿。其母亲本是好不容易与袭击的野兽搏斗，千辛万苦才生下他；可后来，由于实在是食物匮乏，他母亲动了念头要将他杀死吃掉，最后关头反映过来，丢下他逃走了。然后阿修罗就这样慢慢长大，靠吃各种腐坏的尸体（包括人的）苟活。由于无人教养，也不会说话，行为与野兽无异。后来遇到一位高僧，给了他一些食物，并给他取名阿修罗；教他念了一句“喃无阿弥托佛”，即使他并不明白意思。\n之后，阿修罗到了一个村落，人们也并不把他当人看，他也被地主家的傻儿子欺负。在此，其实从侧面看出，底层的受雇于地主的人备受压迫，然而还是没有人愿意帮助阿修罗，只把他当作怪物远远避开。阿修罗凭借野兽般的本能，伤了地主儿子，而被追杀；后被女主若狭所救。若狭开始照顾其起居，教他说话，学习一般人的行为方式。然而好景不长，阿修罗很是依赖若狭，但若狭也有心仪的对象；阿修罗发现后，不理解而伤了他，后被若狭愤怒地赶走。\n村里过的不好，饥寒交迫，若狭的父亲甚至想把她卖掉以换取食物。阿修罗为救即将饿死的若狭，偷偷杀了地主家的马，取其肉给若狭。可是若狭以为那是人肉而拒绝，最终饿死。阿修罗也被全村人围剿追杀（地主许诺他们以粮食）至濒死。\n这时阿修罗又遇到了那位高僧（观影为前几个月，可能时间先后略有差别），此处可谓是全剧的最高潮。高僧问其为什么要伤人，阿修罗答曰（大意）为了生存；人们都说我是吃人的恶魔，然而那些衣冠楚楚的人，他们又何尝不是？由于地主许诺粮食，为了生存，就要追杀我致死，他们的行为，又与我何异？高僧曾说过，能为他人着想，方能称为人，为了践行这一点，取阿修罗之斧自断一臂给阿修罗当食物。阿修罗受到极大震撼而逃走。\n最终的结局，下着小雪的拱桥上，拔掉了自己犬齿的阿修罗，与送葬若狭的板车，擦肩而过。往后多年，阿修罗出家，成为得道高僧。\n这便是电影的主要内容，简要梳理于此。个人功力有限，有兴趣的我强烈建议去看一看原电影。主要声优为野沢雅子出演阿修罗，林原惠美出演若狭。这二位想必也不用多做介绍，少说都是业界顶梁柱级别的。\n在这就剧中的三位主要人物谈谈我浅显的理解。首先是阿修罗，这个名字来源于佛教，为天龙八部之一。我对佛教不是太懂，仅从剧中来讲，想表达的，他所修的，当属苦难的修罗道吧。阿修罗这个角色，要说作恶伤人，以一般人来看，确实做了很多；而考虑到其成长经历，这些又都是合情合理。至少我，很难以一个人类自居而去责备这个所谓的食人恶鬼。在极端条件下，大家很可能都是一样的。很可能觉得，活着就很难了，其他的仁义道德见鬼去吧。\n然后是若狭。美啊。除了人美，想必剧组是想通过这个角色，表现出人“善”的一面。我们可以看到，这个“善”显然也不是完美的，而存在缺陷。若狭对阿修罗虽好，但实际上心底里还是没把他当人看，对其心底里是不信任的，这从之前她在阿修罗面前洗澡，阿修罗伤了恋人后将其赶走，以及最后她拒绝马肉那里可以看出。这个造成的结果，就是自己最终饿死，阿修罗也被追杀。\n再就是剧中高僧的形象。高僧出场不多，但每次都是对剧情以及阿修罗的成长起到关键性的推动作用。我想这部电影想歌颂的，便是这种即便看清这乱世本质，仍能维持本心（仍保持“人”的状态），这样人类进步的曙光吧。阿修罗在最后，也悟到这一点，成为一代高僧。\n由于对人性阴暗面的揭露，阴暗的基调，本片也收到了一些批评。也有批评其剧情俗套，或是过于说教，为了宣传宗教等等的声音。但总之，我是觉得，能引人思考的片子，不管你喜不喜欢，当属上乘作品。\n以上便是近期的三篇简评。均为个人观点，还望与诸位多多交流。\n","permalink":"/posts/jian-ping-san-ze/","summary":"每每看完一部有意思的作品，总有些想说的。早有意写点评论，最初是想写长，后来发现写长有两个弊端，一个是花的时间较多；二是自身的文字功力也不够。以防无病呻吟，这次尝试一下简要些的评论。\n射雕（2017） 金庸先生的作品我向来是非常推崇的，他的所有武侠作品，我应该都有拜读过。其中最喜爱的当属《天龙八部》和《笑傲江湖》两部，在此不表。喜爱天龙八部的，可以看看水天王x的解读。\n说到射雕三部曲，是我最先看的金庸先生的作品。不过实际上，初中时机缘巧合下，我先看的是《神雕侠侣》，之后才是《射雕英雄传》和《倚天屠龙记》。就小说本身来讲，我认为射雕是最能代表金庸武侠小说整个基调的作品，整部给人的感觉，怎么说呢，“中正”似乎比较合适。无论是从角色塑造，还是剧情安排情节设计，我觉得都是中规中矩（褒义，也并不代表没有起承转合和悬念等，只是相对于其之后的一些作品，没有那么出彩而已）。\n此次是评今年新拍的电视剧，小说那边就暂时放下。首先给个整体评分，6.5/10。这个分数，代表着及格了，不至于说是拍的很烂，但许多方面，尚有许多可以提高的空间。\n说到武侠，首先就来谈谈武术。打戏方面，整体还是很不错的。不得不说，不吹不黑，中国这边的（武术）动作指导确实领先世界。现今许多欧美大片里的打戏，也借鉴了中国这边打戏的“套路”，而不是以前的对殴，从而提高了观赏性。日本的奥特曼系列，在最近的几部剧场版里，似乎也请了中国的武术指导，贝利亚、塞罗、雷欧等的表现都远胜于当年他们本身的特设剧集。本次的射雕中，演员们看的出也是用心去学了这些，才造就了不错的观赏性。\n另一方面，特效。武术特效上，我认为需要批评。降龙十八掌等，打斗正酣时，突然就对起波来了，非常出戏，而且毫无气势。可能剧组人员有些误解，认为卷起落叶、风沙、湖水，再对波就是有气势了。然而并不是那样，我看的是挺尴尬。好的例子比如电影《功夫》中的武术特效，并不太多而恰到好处的展现了气势和威力；再比如老版的天龙，射雕中，特效水平并没有那么好，然而仍能感觉到很恰当。其他的，诸如郭靖的白雕，欧阳锋的蛇，欧阳锋逗鸟（教杨康轻功的时候），让人不禁想大呼“五毛特效”，出戏，减分。\n武术方面还有一点没有做到位，就是实力的展示。整个射雕中的武功水平，大致可以分为论剑级，高手级，一般级，杂粹级。华山论剑的洪七公、欧阳锋等属于论剑级，他们的武功，可以说是远高于江南七怪（单个一般级，合在一起高手级，全真七子评级大致相同而略高于江南七怪）这个级别的；铁掌帮帮主裘千仞（真）当属于高手级。郭靖最开始实力应该不太行，几乎就是略高于杂粹级，后来慢慢成长到论剑级，而这个成长在剧中体现的并不是太明显，可能是由于拍戏需要？似乎任何时候，郭靖和任何人都是强行五五开，比如和欧阳锋，比如和完颜洪烈手下那帮打杂的。想起风师弟的名言，“他的功力不在我之下”。 还有就是，郭靖降龙十八掌的学习，黄蓉打狗棒法的学习展示都不到位，首先学习过程就草草了事，另外学完了真的表现出区别了吗？\n再来谈谈演员。主角的选角扮相塑造，还算令人满意。郭靖方面，没有太明显的优缺点；黄蓉刚开始的小叫花扮相是有些惊艳到我了，后期的女装扮相反而没那么好。配音（这部剧配音演员和出演演员是不同的）整体也还行，黄蓉的声音很可爱。其他角色中，可能是由于到了这个年代，整体上偏胖，略出戏，真正的习武之人，身材走形应该没那么严重吧。并不是瞧不起胖子，我自己也胖，所以深切体会到了胖的劣势。黄药师的塑造还不错，邪劲儿展现出了一些，但还可以加强；欧阳锋也不错，差了点凶狠劲儿，当然台词中不断重复的“少废话”有时让人出戏。\n最令我不满意的，是老顽童的塑造。整部剧下来，感觉剧组是不是和老顽童有仇啊，简直把他塑造的跟个傻x一样。我们来看看老顽童的背景，他是前天下第一王重阳的师弟，本身功夫不低，再加之射雕中实际他已习得九阴真经全部，可以说是射雕中还存活于世的众人中，武功最高的了。这样的一个人，疯癫归疯癫，贪玩归贪玩儿，我是不认为其应该表现的像zz一样。另外，配音，台词中，一口一个“不好玩儿”也极其尴尬，有兴趣可以去体验。\n再聊聊剧情的起承转折。本次电视剧的剧情走向，大体和小说相同，至少我没有发现什么明显的区别。要说缺点，我觉得，杨康这个角色的塑造上，有时候转折太僵，不太符合逻辑。还有就是穆念慈为什么会喜欢杨康这一点的处理上，非常生硬，除了智商下线，似乎很难找到合理的解释。由于年代久远，我已不大记得清楚原著中是怎么描写的了，可能本来就是这样。欧阳锋欧阳克的许多表现也不到位，太浮夸。\n感情戏。射雕的感情戏，本也是可圈可点。原著中郭靖黄蓉恋情的起起伏伏，以及郭靖和华筝之间的爱恨纠葛，给我留下了很深的印象。而此次电视剧中，感情戏这一块，是要大大的扣分。可能由于某些不知名的局限，感觉剧组在刻意回避这一块。整体上感觉，就像几个小朋友在过家家一样，丝毫感受不到任何的刻骨铭心。没记错的话，两人手都很少牵，最亲密的接触大概是略像老友相见的拥抱，没有贴脸，没有贴额头，什么？你说吻戏，不存在的，会带坏小朋友哦。除了剧组决定的整个走向，演员的演技可能也不到位，就像两个小朋友在玩一样，略尴尬。\n音乐没什么好说的，大部分采用了《铁血丹心》的重新编曲，表现尚可。开始我觉得这是剧组是致敬经典，是想把剧拍好的先兆；后来发现，似乎有偷懒的嫌疑，省去不少经费啊，而且最终就算再烂，经典歌曲总不会被人喷。\n我为什么说剧组偷懒，那得看道具布景等。举个例子，在荒岛上，洪七公被欧阳锋所伤，然后和郭靖合计骗欧阳锋让其觉得七公功力已恢复；郭靖用空明拳劲就着锋利的匕首割松树（这点剧里实际没讲清楚），再让假装让洪七公掌击郭靖震断大树。这一段里，原著中描写，我记得至少得是碗口大的松树吧，而在剧中，什么玩意儿，几棵小树苗？不是我吹，我一脚都能蹬断的那种。再举个例子，丐帮集会推选新帮主，渲染的倒是挺重大，实际呢，就这么点人？再来一个例子，最后，所谓蒙古大军压境，驻扎在襄阳城外；也太寒碜了吧，总共有100人么？唯一到位一点的，当属之前一点郭靖立功那段（之后没有请求成吉思汗取消婚约而是取消屠城），攻城的壮烈场景表现还不错。\n射雕，当属被翻拍次数最多的武侠作品之一，经典毋庸置疑。今年的这部，之前也说了，属于刚刚及格，比不上一些经典演绎，但也不是一无是处。期待以后咱们能拍出更好的剧集。另外，也期待武侠小说界能有新的如射雕般长青的作品诞生。\n君の名は 《你的名字》这部新海诚监督的作品离最初上映已一年，其无论在日本还是海外（包括中国）的成就，大家有目共睹。我在前两天刚刚看，一方面是由于BD刚刚出，二是b站也有正版付费观看了。我选择了后者，个人评分给9/10。\n新海诚的大名早有耳闻，应该算是除了宫崎骏以外在中国最有名的日本动画电影监督了。然而实际上，君名是我看的第一部新海诚导演的动画电影（之前只看过他导演的番剧《她与她的猫》）。《秒速5厘米》，《言叶之庭》等等，暂且留着待补。\n之所以这样，有点像把好的东西留着，收藏起来，有机会慢慢享用。抑或是等合适的人一起分享，或是挚友，或是未来的恋人。\n我跟你们讲，单身狗被强塞一嘴狗粮很难受的。这次君名也是，看完了，但觉狗粮太甜，甜到齁了；只能感叹，“真好啊”。转念又一想，“醒醒吧，看脸的”。\n说回电影本身。君名的故事本身其实特别简单，无非是身体互换，到互相喜欢，到最后互相追寻找到对方，非常的套路。然而能驾驭住这类经典（另一方面也可以说是烂大街）的套路，方显导演的功力。\n电影一上来，毫不磨叽，直接就开始讲述身体互换的故事，30分钟后突然OP，以及时不时的一点小幽默，非常好的调节了节奏，让大家始终不至于走神。后期故事展开，以及寻求解决方案，也是一环套着一环，高潮迭起，整个100来分钟下来，可以说是一气呵成。\n电影的成功，除了本身的剧情、节奏，也离不开其出色的画面和配乐。新海诚的作品里面，画面精良随手截屏即壁纸的美名早已远扬。这次我也切实体验到了。而且，作为2d作画的动画电影，这是一大优势，精美的画面可以最大程度的反映出创作者天马行空的想象力，让观众体验到现实生活中几乎不存在的世界。我想这也是我之所以喜欢动画的本质原因之一。\n配乐自不必多说，除了恰到好处的BGM、音效以外，OP、ED和插入曲也曲曲传神，可谓享受。\n角色表演上，作画不必多提，必有大佬出力。声优的表现也很出色，说实话对于声优了解颇多的我对主角这两位声优了解甚少，所以他们是凭实打实的实力给我留下深刻印象的。尤其是男主声优神木隆之介，表现身体交换后那种娘娘的气质，真是神了。\n给9分，综上我认为这部动画在各个方面几乎做到了完美。少一分，是由于（可能是暂时）对我的人生、追番口味等并无太大影响。其他评分参考，客观的话，EVA在其诞生的背景下，我给9.5；在如今我看过很多动画后，以当下的标准，我给8.5。\n阿修罗 这部是一部挺老的动画电影了，我大概于今年三月左右看的。这是一部讲述乱世中人性的动画，可引人深思。在此就不草草给评分了，喜不喜欢，仁者见仁智者见智。\n整部作品的基调比较黯淡，这是来自于背景的设定。契合表现主题的画风也相对特殊，因此可能有些人不喜。\n主角阿修罗是一个乱世中的孤儿。其母亲本是好不容易与袭击的野兽搏斗，千辛万苦才生下他；可后来，由于实在是食物匮乏，他母亲动了念头要将他杀死吃掉，最后关头反映过来，丢下他逃走了。然后阿修罗就这样慢慢长大，靠吃各种腐坏的尸体（包括人的）苟活。由于无人教养，也不会说话，行为与野兽无异。后来遇到一位高僧，给了他一些食物，并给他取名阿修罗；教他念了一句“喃无阿弥托佛”，即使他并不明白意思。\n之后，阿修罗到了一个村落，人们也并不把他当人看，他也被地主家的傻儿子欺负。在此，其实从侧面看出，底层的受雇于地主的人备受压迫，然而还是没有人愿意帮助阿修罗，只把他当作怪物远远避开。阿修罗凭借野兽般的本能，伤了地主儿子，而被追杀；后被女主若狭所救。若狭开始照顾其起居，教他说话，学习一般人的行为方式。然而好景不长，阿修罗很是依赖若狭，但若狭也有心仪的对象；阿修罗发现后，不理解而伤了他，后被若狭愤怒地赶走。\n村里过的不好，饥寒交迫，若狭的父亲甚至想把她卖掉以换取食物。阿修罗为救即将饿死的若狭，偷偷杀了地主家的马，取其肉给若狭。可是若狭以为那是人肉而拒绝，最终饿死。阿修罗也被全村人围剿追杀（地主许诺他们以粮食）至濒死。\n这时阿修罗又遇到了那位高僧（观影为前几个月，可能时间先后略有差别），此处可谓是全剧的最高潮。高僧问其为什么要伤人，阿修罗答曰（大意）为了生存；人们都说我是吃人的恶魔，然而那些衣冠楚楚的人，他们又何尝不是？由于地主许诺粮食，为了生存，就要追杀我致死，他们的行为，又与我何异？高僧曾说过，能为他人着想，方能称为人，为了践行这一点，取阿修罗之斧自断一臂给阿修罗当食物。阿修罗受到极大震撼而逃走。\n最终的结局，下着小雪的拱桥上，拔掉了自己犬齿的阿修罗，与送葬若狭的板车，擦肩而过。往后多年，阿修罗出家，成为得道高僧。\n这便是电影的主要内容，简要梳理于此。个人功力有限，有兴趣的我强烈建议去看一看原电影。主要声优为野沢雅子出演阿修罗，林原惠美出演若狭。这二位想必也不用多做介绍，少说都是业界顶梁柱级别的。\n在这就剧中的三位主要人物谈谈我浅显的理解。首先是阿修罗，这个名字来源于佛教，为天龙八部之一。我对佛教不是太懂，仅从剧中来讲，想表达的，他所修的，当属苦难的修罗道吧。阿修罗这个角色，要说作恶伤人，以一般人来看，确实做了很多；而考虑到其成长经历，这些又都是合情合理。至少我，很难以一个人类自居而去责备这个所谓的食人恶鬼。在极端条件下，大家很可能都是一样的。很可能觉得，活着就很难了，其他的仁义道德见鬼去吧。\n然后是若狭。美啊。除了人美，想必剧组是想通过这个角色，表现出人“善”的一面。我们可以看到，这个“善”显然也不是完美的，而存在缺陷。若狭对阿修罗虽好，但实际上心底里还是没把他当人看，对其心底里是不信任的，这从之前她在阿修罗面前洗澡，阿修罗伤了恋人后将其赶走，以及最后她拒绝马肉那里可以看出。这个造成的结果，就是自己最终饿死，阿修罗也被追杀。\n再就是剧中高僧的形象。高僧出场不多，但每次都是对剧情以及阿修罗的成长起到关键性的推动作用。我想这部电影想歌颂的，便是这种即便看清这乱世本质，仍能维持本心（仍保持“人”的状态），这样人类进步的曙光吧。阿修罗在最后，也悟到这一点，成为一代高僧。\n由于对人性阴暗面的揭露，阴暗的基调，本片也收到了一些批评。也有批评其剧情俗套，或是过于说教，为了宣传宗教等等的声音。但总之，我是觉得，能引人思考的片子，不管你喜不喜欢，当属上乘作品。\n以上便是近期的三篇简评。均为个人观点，还望与诸位多多交流。","title":"简评三则"},{"content":"前言-闲扯 标题致敬的成分并不太多，更多还是取了本意，主要集中讨论自己的感想。\n其实构思这篇已经有好久，奈何即使是最近相对较闲一点，但自己实在是挺拖延的，就拖到了现在。 写于满25周岁之际，权当阶段性总结和展望。\n可以看到这个博客久疏更新，除去某些众所周知的因素，自身的执行力方面还有待加强。 也想过搞个微信公众号或者知乎上更点内容，后来感觉还是这里各方面可能更自由一些，之后有些内容若自己觉得好会转载到其他平台。 当然，这里也不会胡乱黑我大天朝。即使用的外网服务器，自定义的域名建的站，某组织想治还是治的了，暂也不须细说。 整体上来看，自建网站的优势在于内容、版式自由，不会莫名奇妙的违规，而被删文禁评论，缺点是信息传播比较难且慢；社交平台的优势在于社区的社交氛围，信息交流快。 话说回来，有朋友QQ空间写文也不见得知识水平就低了，本质还是内容决定了品味，各位自行取舍便好。\n写作计划 距离上次真正写自己喜欢的东西已经一年多有余，不由感叹，越是长大，越是觉得时间过的快，这也是拟此标题的部分原因。 上次介绍了可谓是本人最喜爱的动画系列作品，新世纪福音战士（Evangalion）。近期若有机会，会将其再排排版发到这里。\n另外，为了督促自己，也在这里谈一谈之后想介绍推荐的一些作品。 首先是物语系列，这感觉又会是个大坑，主要应该还是会集中讨论声优和音乐，会尝试讨论人物性格。 然后是FLCL，kill la kill，天元突破，这三部应该属于类似作品，作画炸裂，观感大多是“爽！” 再加上龙的牙医，这些作品，我是能从中体会到，作者及工作人员对动画这种表现形式的热爱以及对其寄于的厚望。 用爱发电，还真不是说说而已。 可能的话，在自己补齐JOJO系列后，也会稍稍安利一波。\n近期打算读一读《无辜的怪物》这本书，讲伊莉莎白巴托里的生平事迹。 动机来源于自己对FGO里这位英灵的喜爱，也算是这游戏的一个好处； 另一处体现就是对亚瑟王、圆桌骑士、梅林这些比较熟，看变5不由惊呼这都什么鬼（虽然FGO里也挺胡扯的，哈哈）。 若能看完，看能不能写个读后感。\n还准备写个FGO抽卡概率及期望的简单分析。其实基本内容早已做好，开始准备做个视频，PPT都做了，后来想想可能还是写成文章更好。 结论是按照一定的假定，考虑已公开的保底机制，算得10连出SSR张数的期望为0.14，单抽10次的SSR张数期望为0.1，还是隔不少的。\n近期热点 国内外各种新闻每天都有，这里想对近期的一些事情发表下自己的看法，与诸位交流。\n先说美国这边的吧。按照时间顺序，第一件是马里兰那个毕业演讲。 先是被某公众号扣了顶“辱华”的帽子，后来又有她在微博的声明，我也去看了演讲的原文，事情大概是这样吧，我发表的言论也仅限于自己了解的信息。 我不会说她不对，她有自己说话的权力，更何况还是学校评选出来的演讲机会。 但老实说，看完后我内心是挺难受的，说心痛也不为过。 我也不会责怪她，只是恨自己为什么不能更优秀些，自己为什么不能站在那里，去说点其他什么。 我的总体印象，有些假大空；后面看到微博时，更是觉得有些演，哎，也不多说了。 相比之下，个人认为扎克伯格在哈佛毕业典礼上的演讲要有意思的多，有兴趣可以去看看。 总之，还是自己多多提高水平，争取能早日站在更高平台发声。\n之前看到的一个知乎回答里的事迹，忘记出处，侵删。 大概是挺早的时候，一次在游轮上，他们（那位答主）几个中国人被各种刁难欺负，弄得特别狼狈。 大家有许多委屈也无处宣泄，也不知谁提了一句“我们唱国歌吧”，于是几个大老爷们儿就站在甲板上，一边流泪一边唱“起来，不愿做奴隶的人们……” 每每想到这一幕，自己也是热泪盈眶，“站起来”还真不是一件容易的小事。\n第二件事是UIUC走失的中国学生。关注这个事情好一段时间，非常难受：现在只能说，即使是骗自己，还是但愿平安吧。 另外给新来美国留学的同学们建议是， 来美后尽快买车或出行一定坐朋友车，尽量尽量避免一个人在街上走。 也尽量避免一个人在停着的车里玩手机或休息等。 不要觉得小概率事件遇不到的，真遇到了，哭天喊地都没有用。 刚来美国的第一个学期，家里被翘窗（室友的窗子）入室盗窃，MacBook和iPad被偷。无法想象若是我当时如果在家会发生什么。 另外有一次，星巴克出来在车里玩了下手机，一个黑姐来敲我门并准备从包里掏点什么出来，吓尿，还好是传教的；那段时间刚发生了华人学生开车被追尾然后被枪击的事。 单论治安方面，美国给我的不安全感真的远超于国内。\n看国内舆论，不出意外，又有少数说受害者不好的，说她太蠢云云，正如那次有人说被枪击的受害者“开奔驰，活该”。 可见，路还有些距离要走啊。受害者并没有错，即使是因为刚到美国不久还未了解情况，也没有任何理由谴责她。\n最近几天好像没什么进展，持续关注中。\n说来自己昨天也被流浪汉要钱了，不是抢只是乞讨，不过也怪吓人。 第一次一位亚裔大妈，给了一美元；第二位是位白人大妈，要一个quater（0.25美元的硬币），没有零钱，看我有些紧张还安慰说没事没有也没办法。 以往我是不怎么理他们的，可能最近穷怕了，有点能理解他们的处境。愿好人有好报。\n再说说国内。一起说好了，关注的人肯定也基本都有了解，一个是北电，一个是乒乓。 前者反映出国内娱乐圈的一些情况，后者反映出国内体育圈的一些情况。 这两个圈出了名的来钱，也是出了名的乱。 问题其实也挺相似，一是官僚主义，二是规则（法律法规等）的不健全。 就个人经历来讲，在美国前者也有，至少我去年时是被所在学校一些机构的人坑的挺惨，差点学籍都消了； 后者美国作为发达国家确实要做的好得多，但是方便社会高层次的人，各种规则细致入微，导致读书少的社会底层人士无法弄懂，只好花钱请律师一类，然而穷人又没钱请的起好律师，也是一个问题。 总归作为社会性的人类来讲，有法可依显然比无法可依要好点。\n这两个事件让人寒心的，事件本身当然算，但我们还不能确定真相，因为大体上我们只看到了片面的发言； 另外有两点，一点是官方不作回复，直接禁言禁转发，撤销热搜关键字等行为，二是某些洗地的人的言论。\n第一点来看，即使我们所知未必为事件全貌，但可以确定的是这背后必有些猫腻，否则，为啥不让权威机关直接公布那些是谣言？ 封禁的那些微博内容，究竟是违背了哪条法律法规？直接就违规，或删掉，或禁转发，或禁回复，吃相太难看。 截至目前，在郝劲松的微博上，好多为乒乓发生的微博都是这样的下场。 这是个知名人士，若一般p民，还不直接封号了。\n第二点是拿民族主义大义来洗地的，昨天看了一条回复，大概有两个论点： 1.中国建国以来这么多冤假错案，郝律师你管的过来么？2.（针对罢赛行为）把个人利益放在国家利益之上是要反对的。 简直狗屁不通！ 错误就是错误，为什么就得过且过，放任不管？照这个逻辑，那么多违法犯罪的，管的过来么，不如不管了？笑话。 这个社会，有时还真得有这么些较真的人。了解到这位律师当年因火车上卖水不给发票状告铁路局，而且胜诉后，更是对其表示钦佩。 关于个人利益和国家利益，个人对“国家利益高于个人利益”倒没什么意见。 但且不论运动员们并没有得到什么利益，反倒是被训了还出来道歉，结果被带个仅为追求个人利益的帽子； 某局在重大比赛之前换帅，这就符合国家利益了。 叫我来说，以一身正气，对抗乱搞的不正之风，反而是彰显了我国运动员的风骨。 这段经历，多年后未尝不能在世界体坛留下好的印象，这才是国家利益的体现。 另外就是，还请某些人回去翻翻党章，三个代表读一遍。 每个人个人的利益不能确保，又谈何国家利益？ 外国人还不是只会因为看到了咱们一个个的个人活的精彩，才会说中国牛逼？\n还好还有敢于发声的勇士们，为你们点赞。看着已经清空的某微博账户，不由心生一股悲怆之感。\n个人 去年一年，经历了算是人生中最黯淡的一段日子，结果上来讲，我现在在加州读书。\n自诩自己忠心不二，最后反倒落得一个“背叛者”的下场，也是可笑可笑。想来自己还是太年轻，太天真。\n多的也不说了，现在能做的，也只是将一些经典语录打印出来，装裱好，挂在墙上，相信定可激励自己一生。\n感谢整个过程中给予我帮助和关心的，听我吐槽的，陪我出去吃饭派遣时间的朋友们。 虽然有些朋友也是久疏联系，但我必不会忘记这份感激之情。\n感谢来加州后一直帮助我的学姐。也感谢其他给予我帮助的前辈们。\n来美三年，有时也会想诸如自己究竟学会了什么的问题。除去专业知识，最大的我想是一种和以前不太一样的思维方式。 概括起来，大概是（用合理的方式），对不合理的事情发声，以及去争取利益。 可能说起来有些抽象，举个例子，我第一年搬家时，小区物业不仅扣了我所有的押金，还让交罚款；这事我和他们写信据理力争，前前后后搞了一年才终于退了部分押金。 用中国的俗语，叫“会哭的孩子有奶吃”，相信各位朋友亦有体会，这点在美国体现的很明显。\n其他收获，当属对抗孤独的能力，或者说自嗨能力。说到这，也得感谢两款游戏，阴阳师和FGO，它们帮我撑过了难过的日子。\n学习 关于暑期的学习计划自己也想了有些许日子，但光是列出这些发出来，竟然拖了近一个月。在此也请朋友们监督。 专业学习：\nLeetcode 100 题 二刷C++ primer 回顾概率统计基础知识 看完清华邓俊辉的算法课 看一半吴恩达的机器学习课 一刷effective mordern c++ 一刷OS恐龙书（课程） 专业知识的笔记性文章写作，3篇或以上 兴趣方面：\n回顾已学过的太极拳 录两首翻唱的日语歌 练习画画10幅 展望 以上说了这么多，总归希望自己来年有更多的成长吧。\n希望时不时的有老朋友分享喜怒哀乐，也希望能交到更多新朋友。\n愿自己能尽量不熬夜早睡早起，多锻炼，争取身材变好。\n愿人们都能相互理解，世界和平。\n","permalink":"/posts/magic-of-time/","summary":"前言-闲扯 标题致敬的成分并不太多，更多还是取了本意，主要集中讨论自己的感想。\n其实构思这篇已经有好久，奈何即使是最近相对较闲一点，但自己实在是挺拖延的，就拖到了现在。 写于满25周岁之际，权当阶段性总结和展望。\n可以看到这个博客久疏更新，除去某些众所周知的因素，自身的执行力方面还有待加强。 也想过搞个微信公众号或者知乎上更点内容，后来感觉还是这里各方面可能更自由一些，之后有些内容若自己觉得好会转载到其他平台。 当然，这里也不会胡乱黑我大天朝。即使用的外网服务器，自定义的域名建的站，某组织想治还是治的了，暂也不须细说。 整体上来看，自建网站的优势在于内容、版式自由，不会莫名奇妙的违规，而被删文禁评论，缺点是信息传播比较难且慢；社交平台的优势在于社区的社交氛围，信息交流快。 话说回来，有朋友QQ空间写文也不见得知识水平就低了，本质还是内容决定了品味，各位自行取舍便好。\n写作计划 距离上次真正写自己喜欢的东西已经一年多有余，不由感叹，越是长大，越是觉得时间过的快，这也是拟此标题的部分原因。 上次介绍了可谓是本人最喜爱的动画系列作品，新世纪福音战士（Evangalion）。近期若有机会，会将其再排排版发到这里。\n另外，为了督促自己，也在这里谈一谈之后想介绍推荐的一些作品。 首先是物语系列，这感觉又会是个大坑，主要应该还是会集中讨论声优和音乐，会尝试讨论人物性格。 然后是FLCL，kill la kill，天元突破，这三部应该属于类似作品，作画炸裂，观感大多是“爽！” 再加上龙的牙医，这些作品，我是能从中体会到，作者及工作人员对动画这种表现形式的热爱以及对其寄于的厚望。 用爱发电，还真不是说说而已。 可能的话，在自己补齐JOJO系列后，也会稍稍安利一波。\n近期打算读一读《无辜的怪物》这本书，讲伊莉莎白巴托里的生平事迹。 动机来源于自己对FGO里这位英灵的喜爱，也算是这游戏的一个好处； 另一处体现就是对亚瑟王、圆桌骑士、梅林这些比较熟，看变5不由惊呼这都什么鬼（虽然FGO里也挺胡扯的，哈哈）。 若能看完，看能不能写个读后感。\n还准备写个FGO抽卡概率及期望的简单分析。其实基本内容早已做好，开始准备做个视频，PPT都做了，后来想想可能还是写成文章更好。 结论是按照一定的假定，考虑已公开的保底机制，算得10连出SSR张数的期望为0.14，单抽10次的SSR张数期望为0.1，还是隔不少的。\n近期热点 国内外各种新闻每天都有，这里想对近期的一些事情发表下自己的看法，与诸位交流。\n先说美国这边的吧。按照时间顺序，第一件是马里兰那个毕业演讲。 先是被某公众号扣了顶“辱华”的帽子，后来又有她在微博的声明，我也去看了演讲的原文，事情大概是这样吧，我发表的言论也仅限于自己了解的信息。 我不会说她不对，她有自己说话的权力，更何况还是学校评选出来的演讲机会。 但老实说，看完后我内心是挺难受的，说心痛也不为过。 我也不会责怪她，只是恨自己为什么不能更优秀些，自己为什么不能站在那里，去说点其他什么。 我的总体印象，有些假大空；后面看到微博时，更是觉得有些演，哎，也不多说了。 相比之下，个人认为扎克伯格在哈佛毕业典礼上的演讲要有意思的多，有兴趣可以去看看。 总之，还是自己多多提高水平，争取能早日站在更高平台发声。\n之前看到的一个知乎回答里的事迹，忘记出处，侵删。 大概是挺早的时候，一次在游轮上，他们（那位答主）几个中国人被各种刁难欺负，弄得特别狼狈。 大家有许多委屈也无处宣泄，也不知谁提了一句“我们唱国歌吧”，于是几个大老爷们儿就站在甲板上，一边流泪一边唱“起来，不愿做奴隶的人们……” 每每想到这一幕，自己也是热泪盈眶，“站起来”还真不是一件容易的小事。\n第二件事是UIUC走失的中国学生。关注这个事情好一段时间，非常难受：现在只能说，即使是骗自己，还是但愿平安吧。 另外给新来美国留学的同学们建议是， 来美后尽快买车或出行一定坐朋友车，尽量尽量避免一个人在街上走。 也尽量避免一个人在停着的车里玩手机或休息等。 不要觉得小概率事件遇不到的，真遇到了，哭天喊地都没有用。 刚来美国的第一个学期，家里被翘窗（室友的窗子）入室盗窃，MacBook和iPad被偷。无法想象若是我当时如果在家会发生什么。 另外有一次，星巴克出来在车里玩了下手机，一个黑姐来敲我门并准备从包里掏点什么出来，吓尿，还好是传教的；那段时间刚发生了华人学生开车被追尾然后被枪击的事。 单论治安方面，美国给我的不安全感真的远超于国内。\n看国内舆论，不出意外，又有少数说受害者不好的，说她太蠢云云，正如那次有人说被枪击的受害者“开奔驰，活该”。 可见，路还有些距离要走啊。受害者并没有错，即使是因为刚到美国不久还未了解情况，也没有任何理由谴责她。\n最近几天好像没什么进展，持续关注中。\n说来自己昨天也被流浪汉要钱了，不是抢只是乞讨，不过也怪吓人。 第一次一位亚裔大妈，给了一美元；第二位是位白人大妈，要一个quater（0.25美元的硬币），没有零钱，看我有些紧张还安慰说没事没有也没办法。 以往我是不怎么理他们的，可能最近穷怕了，有点能理解他们的处境。愿好人有好报。\n再说说国内。一起说好了，关注的人肯定也基本都有了解，一个是北电，一个是乒乓。 前者反映出国内娱乐圈的一些情况，后者反映出国内体育圈的一些情况。 这两个圈出了名的来钱，也是出了名的乱。 问题其实也挺相似，一是官僚主义，二是规则（法律法规等）的不健全。 就个人经历来讲，在美国前者也有，至少我去年时是被所在学校一些机构的人坑的挺惨，差点学籍都消了； 后者美国作为发达国家确实要做的好得多，但是方便社会高层次的人，各种规则细致入微，导致读书少的社会底层人士无法弄懂，只好花钱请律师一类，然而穷人又没钱请的起好律师，也是一个问题。 总归作为社会性的人类来讲，有法可依显然比无法可依要好点。\n这两个事件让人寒心的，事件本身当然算，但我们还不能确定真相，因为大体上我们只看到了片面的发言； 另外有两点，一点是官方不作回复，直接禁言禁转发，撤销热搜关键字等行为，二是某些洗地的人的言论。\n第一点来看，即使我们所知未必为事件全貌，但可以确定的是这背后必有些猫腻，否则，为啥不让权威机关直接公布那些是谣言？ 封禁的那些微博内容，究竟是违背了哪条法律法规？直接就违规，或删掉，或禁转发，或禁回复，吃相太难看。 截至目前，在郝劲松的微博上，好多为乒乓发生的微博都是这样的下场。 这是个知名人士，若一般p民，还不直接封号了。\n第二点是拿民族主义大义来洗地的，昨天看了一条回复，大概有两个论点： 1.中国建国以来这么多冤假错案，郝律师你管的过来么？2.（针对罢赛行为）把个人利益放在国家利益之上是要反对的。 简直狗屁不通！ 错误就是错误，为什么就得过且过，放任不管？照这个逻辑，那么多违法犯罪的，管的过来么，不如不管了？笑话。 这个社会，有时还真得有这么些较真的人。了解到这位律师当年因火车上卖水不给发票状告铁路局，而且胜诉后，更是对其表示钦佩。 关于个人利益和国家利益，个人对“国家利益高于个人利益”倒没什么意见。 但且不论运动员们并没有得到什么利益，反倒是被训了还出来道歉，结果被带个仅为追求个人利益的帽子； 某局在重大比赛之前换帅，这就符合国家利益了。 叫我来说，以一身正气，对抗乱搞的不正之风，反而是彰显了我国运动员的风骨。 这段经历，多年后未尝不能在世界体坛留下好的印象，这才是国家利益的体现。 另外就是，还请某些人回去翻翻党章，三个代表读一遍。 每个人个人的利益不能确保，又谈何国家利益？ 外国人还不是只会因为看到了咱们一个个的个人活的精彩，才会说中国牛逼？","title":"时间的魔法"},{"content":"至少四年以前写的。还是有些借鉴意义，稍微编辑了一下，发布于此。加了个tag OldStory。\n背景 紫菘10栋，上学期末，某位哥们的“肉机”中了ARP病毒，不停地伪装成我们10栋的网关218.197.219.254给其他计算机发包，至少导致了316以及附近的一排寝室无法上网，拨号软件mentohust不停的提示arp欺骗源的出现，都有一种想把他电脑砸掉的心了，可惜虽然知道他的MAC地址（当然也可能是某些病毒将其电脑伪装成的错误地址），但不知道是那一台。此次事件对我触动颇深，因此借这个网络基础课程的小论文的机会，给大家介绍一下ARP与ARP欺骗的原理，并提出一些解决方法。\nARP协议 基本功能 ARP是地址转换协议（Address Resolution Protocol）的英文缩写，它是一个链路层协议，工作在OSI模型的第二层，在本层和硬件接口间进行联系，同时对上层（网络层）提供服务。 在以太网协议中规定，同一局域网中的一台主机要和另一台主机进行直接通信，必须要知道目标主机的MAC地址。而在TCP/IP协议栈中，网络层和传输层只关心目标主机的IP地址。这就导致在以太网中使用IP协议时，数据链路层的以太网协议接到上层IP协议提供的数据中，只包含目的主机的IP地址。于是需要一种方法，根据目的主机的IP地址，获得其MAC地址，ARP 协议就是用来确定这种对应关系的协议。所谓地址解析（address resolution）就是主机在发送帧前将目标IP地址转换成目标MAC地址的过程。 另外，当发送主机和目的主机不在同一个局域网中时，即便知道目的主机的MAC地址，两者也不能直接通信，必须经过路由转发才可以。所以此时，发送主机通过ARP协议获得的将不是目的主机的真实MAC地址，而是一台可以通往局域网外的路由器的某个端口的MAC地址。于是此后发送主机发往目的主机的所有帧，都将发往该路由器，通过它向外发送。这种情况称为ARP代理（ARP Proxy）。\n工作原理 ARP数据包根据接收对象不同，可分为两种： 广播包(Broadcast)。广播包目的MAC地址为FF-FF-FF-FF-FF-FF，交换机设备接收到广播包后，会把它转发给局域网内的所有主机。 非广播包(Non-Broadcast)。非广播包后只有指定的主机才能接收到。 ARP数据包根据功能不同，也可以分为两种： ARP请求包(ARP Request)。ARP请求包的作用是用于获取局域网内某IP对应的MAC地址。 ARP回复包(ARP Reply)。ARP回复包的作用是告知别的主机，本机的IP地址和MAC是什么。 广播的一般都是ARP请求包，非广播的一般都是ARP回复包。 假设局域网内有以下两台主机，主机名、IP地址、MAC地址分别如下：\n主机名 | IP地址 | MAC地址 A | 192.168.0.1 | AA-AA-AA-AA-AA-AA B | 192.168.0.2 | BB-BB-BB-BB-BB-BB\n当主机A需要与主机B进行通讯时，它会先查一下本机的ARP缓存中，有没有主机B的MAC地址。如果有就可以直接通讯。如果没有，主机A就需要通过ARP协议来获取主机B的MAC地址，具体做法相当于主机A向局域网内所有主机喊一嗓子：“喂～谁是192.168.0.2？我是192.168.0.1，我的MAC地址是AA-AA-AA-AA-AA-AA。你的MAC地址是什么，快告诉我”，这时候主机A发的数据包类型为：广播-请求。\n当主机B接收到来自主机A的“ARP广播-请求”数据包后，它会先把主机A的IP地址和MAC地址对应关系保存/更新到本机的ARP缓存表中，然后它会给主机A发送一个“ARP非广播-回复”数据包，其作用相当于告诉主机A：“嘿，我是192.168.0.2，我的MAC地址是BB-BB-BB-BB-BB-BB”。当主机A接收到主机B的回复后，它会把主机B的IP地址和MAC地址对应关系保存/更新到本机的ARP缓存表中，之后主机A和B就可以进行通讯了。\n从上述局域网主机通讯过程可以看出，主机在两种情况下会保存、更新本机的ARP缓存表，接收到“ARP广播-请求”包时; 接收到“ARP非广播-回复”包时\narp命令 格式：\nARP -s inet_addr eth_addr [if_addr] ARP -d inet_addr [if_addr] ARP -a [inet_addr] [-N if_addr] [-v] 命令\n-a 通过询问当前协议数据，显示当前 ARP 项。如果指定 inet_addr，则只显示指定计算机的 IP 地址和物理地址。如果不止一个网络接口使用 ARP，则显示每个 ARP 表的项。 -g 与 -a 相同。 -v 在详细模式下显示当前 ARP 项。所有无效项和环回接口上的项都将显示。 inet_addr 指定 Internet 地址。 -N if_addr 显示 if_addr 指定的网络接口的 ARP 项。 -d 删除 inet_addr 指定的主机。inet_addr 可以是通配符 *，以删除所有主机。 -s 添加主机并且将 Internet 地址 inet_addr与物理地址 eth_addr 相关联。物理地址是用连字符分隔的 6 个十六进制字节。该项是永久的。 eth_addr 指定物理地址。 if_addr 如果存在，此项指定地址转换表应修改的接口的 Internet 地址。如果不存在，则使用第一个适用的接口。 示例:\n\u0026gt; arp -s 157.55.85.212 00-aa-00-62-c6-09.... 添加静态项。 \u0026gt; arp -a .... 显示 ARP 表。 ARP欺骗 欺骗原理 从上文我们已经了解到，主机会保存、更新本机的ARP缓存表的两种情况。从中我们可以看出，ARP协议是没有身份验证机制的，局域网内任何主机都可以随意伪造ARP数据包，ARP协议设计天生就存在严重缺陷。\n比如下图PC03为了达到某种目的，于是决定实施一次ARP欺骗攻击。PC03首先向PC02发送了一个ARP数据包，作用相当于告诉PC02：“嘿，我是192.168.0.1，我的MAC地址是03-03-03-03-03-03”，接着他也向GW发送了一个ARP数据包，作用相当于告诉GW：“嘿，我是192.168.0.2，我的MAC地址是03-03-03-03-03-03”。于是，主机PC02与GW之间的数据流向，以及它们各自的ARP缓存表就变成如下图所示：\n从上图我们可以看出，ARP欺骗之后，主机PC02与GW之间的所有网络数据都将流经PC03，即PC03已经掌控了它们之间的数据通讯。以上就是一次ARP欺骗的实施过程，以及欺骗之后的效果。\nARP欺骗带来的危害可以分为几大类 网络异常。具体表现为：掉线、IP冲突等。 数据窃取。具体表现为：个人隐私泄漏（如MSN聊天记录、邮件等）、账号被盗用（如QQ账号、银行账号等）。 数据篡改。具体表现为：访问的网页被添加了恶意内容，俗称“挂马”。 非法控制。具体表现为：网络速度、网络访问行为（例如某些网页打不开、某些网络应用程序用不了）受第三者非法控制。 ARP欺骗根据发起个体的不同可以分为两类 人为攻击。人为攻击的目的主要是：造成网络异常、窃取数据、非法控制。 ARP病毒。ARP病毒不是特指某一种病毒，而是指所有包含有ARP欺骗功能的病毒的总称。ARP病毒的目的主要是：窃取数据（盗号等）、篡改数据（挂马等）。 从目前的情况来看，ARP欺骗（不管是人为的还是ARP病毒）大多数是在网络异常后被发现的。请注意，精心策划的人为ARP欺骗、设计良好的ARP病毒，是可能不会造成网络异常的，所以网络没有出现异常并不代表不存在ARP欺骗问题！ 解决方法（针对网关劫持的情况） arp命令绑定正确MAC地址 方法是在命令提示符下，输入如下命令查看现在的arp缓存表： Arp –a 在用如下命令添加静态项 Arp –c “网关ip地址” “mac地址” 此方法的缺点就是电脑重启后上述arp –a中的内容会被清空，必须重新绑定，很麻烦。\nnetsh命令绑定正确MAC地址（推荐，笔者就是用的这种方式） 这种方法解决了上一个方法的问题，电脑重启后也不需要重新绑定，一劳永逸。 方法是首先在命令提示符下，运行如下命令： netsh i i show in 在返回结果的第一列中，找到本地连接对应的ldx编号。假设电脑本地连接的ldx编号为16，那么，就接着在CMD命令提示符窗口中键入如下命令绑定IP和MAC地址： netsh -c “i i” add neighbors 16 “网关IP地址” “MAC地址” 之后可以运行此命令查看是否已经绑定： arp –a 若要解除绑定，可运行如下命令： netsh -c “i i” delete neighbors ldx 其中ldx需要改为对应的数字。\nARP防火墙 这个根据亲身经历，不是我推荐的，至少360的arp防火墙不是特别靠谱。就拿上次紫松10栋受到arp攻击的时候，来举例，360arp防火墙的表现是不尽人意的，arp攻击的时候它也只能拦截arp发出来的包，但是仍然无法解决不能上网的问题，就跟没有开时的效果没什么两样。它也有个绑定mac地址的功能，分为手动绑定和自动绑定，但可能是由于欺骗源发包过于频繁其自动绑定每次都会绑定到那个错误的mac地址上；换用手动绑定，绑好后仍然上不了网，在命令提示符中输入arp –a查询，网关地址仍然对应的错误的mac，可见这个手动绑定只是在软件层面上的绑定，可悲的是，当可以正常上网的时在360arp中绑定错误了的话是上不了网的，“对了不一定能上网，错了一定不能上网”，让人很无奈。 当然，360arp防火墙也不是没有一点用的，屏蔽掉的那些数据包可能对计算机有害，所以没事还是把它开着吧，至于那里面的手动绑定，没事还是不要动它为好。\n路由器或交换机的高级功能 现在许多交换机或路由器都有一些arp防御的高级功能，原理是自动存储大量的正确的ip地址与mac地址对应的列表并屏蔽非法的数据包，完全阻止arp欺骗或降低其影响范围（比如仅限于某个VLAN中的故障），配合PC上的操作，可实现双向绑定，大大增加局域网的安全性。\n总结 在网络中，我们要时刻保持警惕，保护自己的计算机及其中内容的安全。本文所述的arp协议及arp欺骗的内容，仅仅是arp这个领域的一点点皮毛，对于整个网络安全这个话题来说，就更加显得微不足道。在今后的网络生活中，保持安全意识，积极地去学习网络知识，才是我真正想表达的。\n","permalink":"/posts/arp/","summary":"至少四年以前写的。还是有些借鉴意义，稍微编辑了一下，发布于此。加了个tag OldStory。\n背景 紫菘10栋，上学期末，某位哥们的“肉机”中了ARP病毒，不停地伪装成我们10栋的网关218.197.219.254给其他计算机发包，至少导致了316以及附近的一排寝室无法上网，拨号软件mentohust不停的提示arp欺骗源的出现，都有一种想把他电脑砸掉的心了，可惜虽然知道他的MAC地址（当然也可能是某些病毒将其电脑伪装成的错误地址），但不知道是那一台。此次事件对我触动颇深，因此借这个网络基础课程的小论文的机会，给大家介绍一下ARP与ARP欺骗的原理，并提出一些解决方法。\nARP协议 基本功能 ARP是地址转换协议（Address Resolution Protocol）的英文缩写，它是一个链路层协议，工作在OSI模型的第二层，在本层和硬件接口间进行联系，同时对上层（网络层）提供服务。 在以太网协议中规定，同一局域网中的一台主机要和另一台主机进行直接通信，必须要知道目标主机的MAC地址。而在TCP/IP协议栈中，网络层和传输层只关心目标主机的IP地址。这就导致在以太网中使用IP协议时，数据链路层的以太网协议接到上层IP协议提供的数据中，只包含目的主机的IP地址。于是需要一种方法，根据目的主机的IP地址，获得其MAC地址，ARP 协议就是用来确定这种对应关系的协议。所谓地址解析（address resolution）就是主机在发送帧前将目标IP地址转换成目标MAC地址的过程。 另外，当发送主机和目的主机不在同一个局域网中时，即便知道目的主机的MAC地址，两者也不能直接通信，必须经过路由转发才可以。所以此时，发送主机通过ARP协议获得的将不是目的主机的真实MAC地址，而是一台可以通往局域网外的路由器的某个端口的MAC地址。于是此后发送主机发往目的主机的所有帧，都将发往该路由器，通过它向外发送。这种情况称为ARP代理（ARP Proxy）。\n工作原理 ARP数据包根据接收对象不同，可分为两种： 广播包(Broadcast)。广播包目的MAC地址为FF-FF-FF-FF-FF-FF，交换机设备接收到广播包后，会把它转发给局域网内的所有主机。 非广播包(Non-Broadcast)。非广播包后只有指定的主机才能接收到。 ARP数据包根据功能不同，也可以分为两种： ARP请求包(ARP Request)。ARP请求包的作用是用于获取局域网内某IP对应的MAC地址。 ARP回复包(ARP Reply)。ARP回复包的作用是告知别的主机，本机的IP地址和MAC是什么。 广播的一般都是ARP请求包，非广播的一般都是ARP回复包。 假设局域网内有以下两台主机，主机名、IP地址、MAC地址分别如下：\n主机名 | IP地址 | MAC地址 A | 192.168.0.1 | AA-AA-AA-AA-AA-AA B | 192.168.0.2 | BB-BB-BB-BB-BB-BB\n当主机A需要与主机B进行通讯时，它会先查一下本机的ARP缓存中，有没有主机B的MAC地址。如果有就可以直接通讯。如果没有，主机A就需要通过ARP协议来获取主机B的MAC地址，具体做法相当于主机A向局域网内所有主机喊一嗓子：“喂～谁是192.168.0.2？我是192.168.0.1，我的MAC地址是AA-AA-AA-AA-AA-AA。你的MAC地址是什么，快告诉我”，这时候主机A发的数据包类型为：广播-请求。\n当主机B接收到来自主机A的“ARP广播-请求”数据包后，它会先把主机A的IP地址和MAC地址对应关系保存/更新到本机的ARP缓存表中，然后它会给主机A发送一个“ARP非广播-回复”数据包，其作用相当于告诉主机A：“嘿，我是192.168.0.2，我的MAC地址是BB-BB-BB-BB-BB-BB”。当主机A接收到主机B的回复后，它会把主机B的IP地址和MAC地址对应关系保存/更新到本机的ARP缓存表中，之后主机A和B就可以进行通讯了。\n从上述局域网主机通讯过程可以看出，主机在两种情况下会保存、更新本机的ARP缓存表，接收到“ARP广播-请求”包时; 接收到“ARP非广播-回复”包时\narp命令 格式：\nARP -s inet_addr eth_addr [if_addr] ARP -d inet_addr [if_addr] ARP -a [inet_addr] [-N if_addr] [-v] 命令\n-a 通过询问当前协议数据，显示当前 ARP 项。如果指定 inet_addr，则只显示指定计算机的 IP 地址和物理地址。如果不止一个网络接口使用 ARP，则显示每个 ARP 表的项。 -g 与 -a 相同。 -v 在详细模式下显示当前 ARP 项。所有无效项和环回接口上的项都将显示。 inet_addr 指定 Internet 地址。 -N if_addr 显示 if_addr 指定的网络接口的 ARP 项。 -d 删除 inet_addr 指定的主机。inet_addr 可以是通配符 *，以删除所有主机。 -s 添加主机并且将 Internet 地址 inet_addr与物理地址 eth_addr 相关联。物理地址是用连字符分隔的 6 个十六进制字节。该项是永久的。 eth_addr 指定物理地址。 if_addr 如果存在，此项指定地址转换表应修改的接口的 Internet 地址。如果不存在，则使用第一个适用的接口。 示例:","title":"ARP与ARP欺骗"},{"content":"I have 2 wireless routers (R1, R2) in my local area network (LAN). R1 is the main router, has IP 192.168.0.1 and DHCP address pool 192.168.0.100~199. R2 is in bridge mode and connects with R1. R2 has IP 192.168.1.253, and DHCP address pool 192.168.1.100~199 (actually DHCP service is now disabled automatically).\nI have a problem. When I use a device, say my PC, to connect to Internet from R2, I get an IP 192.168.0.100. Now I cannot go to 192.168.1.253 to change the settings of R2. I cannot visit the page successfully, neither use ping command.\nThe answer is the subnet mask. Now I have subnet mask 255.255.255.0, which is the same as R1 and R2\u0026rsquo;s default setting. This mask treat IPs begin with 192.168.0. and 192.168.1. as different LAN. The easiest way now is setting all device with subnet mask 255.255.254.0. 254 = 0b11111110 Then my devices will treat 192.168.0.xxx and 192.168.1.xxx as a same subnet. And I can easily go to setting pages of R1 and R2.\nAlso, now I can open DHCP service with R2. It can assign IPs among 192.168.1.100~199 to devices directly connected to it.\n","permalink":"/posts/multiple-routers-bridge-connection/","summary":"I have 2 wireless routers (R1, R2) in my local area network (LAN). R1 is the main router, has IP 192.168.0.1 and DHCP address pool 192.168.0.100~199. R2 is in bridge mode and connects with R1. R2 has IP 192.168.1.253, and DHCP address pool 192.168.1.100~199 (actually DHCP service is now disabled automatically).\nI have a problem. When I use a device, say my PC, to connect to Internet from R2, I get an IP 192.","title":"Multiple routers bridge connection "},{"content":"Beginning In fact I have been learning Vim editor for a while. At the beginning, after getting basic knowledge of Python, I just need an editor to write my Python scripts. Before that I used MATLAB and wrote scripts in MATLAB environment. (I changed between MATLAB and Python for several times due to their different advantages, but that is another story.) Since my python primer is A Byte of Python and the author Swaroop C.H. also have a book A Byte of Vim, I just follow him and build my brief on Vim.\nBasics Always we think Vim is difficult to learn. But after you trying to get started, you won\u0026rsquo;t find it that hard. Here I don\u0026rsquo;t introduce it much. Please just go to Interactive Vim tutorial. One can try it for several times to know the basics quickly.\nSearch and replace To become an advanced Vim user, I think the first step is to learn search and replace. I find most of useful information at Vim Tips Wiki. So let\u0026rsquo;s begin.\nSuppose we have such a test.txt file as follow.\nare you okare you okare you okare you ok are you okare you okare you okare you ok are you okare you okare you okare you ok are you okare you okare you okare you ok First I want to add a space between \u0026lsquo;ok\u0026rsquo; and \u0026lsquo;are\u0026rsquo; in each line. Use :%s/okare/ok are/g. It will become\nare you ok are you ok are you ok are you ok are you ok are you ok are you ok are you ok are you ok are you ok are you ok are you ok are you ok are you ok are you ok are you ok Here % means \u0026lsquo;all lines\u0026rsquo; and g means \u0026lsquo;global\u0026rsquo; for all this pattern in a line.\nAdd \u0026lsquo;!\u0026rsquo; to the end of first \u0026lsquo;ok\u0026rsquo; in line 2 to 4. Use :2,4s/ok/ok!/\nare you ok are you ok are you ok are you ok are you ok! are you ok are you ok are you ok are you ok! are you ok are you ok are you ok are you ok! are you ok are you ok are you ok Add \u0026lsquo;?\u0026rsquo; to the end of line 1 and next line. Use :.,+1s/\\zs\\ze\\n/?/\nare you ok are you ok are you ok are you ok? are you ok! are you ok are you ok are you ok? are you ok! are you ok are you ok are you ok are you ok! are you ok are you ok are you ok Here . means first line, +1 means next line, and +1s means excited. Also \\zs, \\ze means only replacing pattern between them. See next example with :2s/are \\zsyou\\ze ok?/YOU/\nare you ok are you ok are you ok are you ok? are you ok! are you ok are you ok are YOU ok? are you ok! are you ok are you ok are you ok are you ok! are you ok are you ok are you ok Delete last \u0026lsquo;are\u0026rsquo; in all lines. :%s/.*\\zsare//\nare you ok are you ok are you ok you ok? are you ok! are you ok are you ok YOU ok? are you ok! are you ok are you ok you ok are you ok! are you ok are you ok you ok Delete last word. :%s/\\s\\+\\w\\+.$//\nare you ok are you ok are you ok you are you ok! are you ok are you ok YOU are you ok! are you ok are you ok you are you ok! are you ok are you ok you Notice here the pattern is somehow difficult than before. \\s+\\w+.$ means a space + a word + a single chracter (here could be ?) and endline. For more details please check regular expression.\nAnd last example. Delete first 2 charactor in each lines. Use :%s/^.\\{1}//\ne you ok are you ok are you ok you e you ok! are you ok are you ok YOU e you ok! are you ok are you ok you e you ok! are you ok are you ok you Other questions:\nDelete second \u0026lsquo;are\u0026rsquo; in each lines. Change second last \u0026lsquo;ok\u0026rsquo; into upper case. Macro Using macro is very easy. Just start with q followed by a macro name, say a here, and end with another q. Please see this example. Original file is as follow\nHello Thank You Are You OK First go to the line of \u0026lsquo;Hello\u0026rsquo; and my control sequence is ^v$y$a = print(\u0026quot;^[pa\u0026quot;)^[j. Here ^[ means \u0026lt;Esc\u0026gt;. Then put in 5@a it will become\nHello = print(\u0026#34;Hello\u0026#34;) Thank = print(\u0026#34;Thank\u0026#34;) You = print(\u0026#34;You\u0026#34;) Are = print(\u0026#34;Are\u0026#34;) You = print(\u0026#34;You\u0026#34;) OK = print(\u0026#34;OK\u0026#34;) This is my fist Vim study notes. Hope it would be helpful! To become a master of Vim, there is a long way to go.\n","permalink":"/posts/vim-notes-1/","summary":"Beginning In fact I have been learning Vim editor for a while. At the beginning, after getting basic knowledge of Python, I just need an editor to write my Python scripts. Before that I used MATLAB and wrote scripts in MATLAB environment. (I changed between MATLAB and Python for several times due to their different advantages, but that is another story.) Since my python primer is A Byte of Python and the author Swaroop C.","title":"Vim Notes 1"},{"content":"今天看到p站上一张出现了某种生物，于是当然有人去众筹时间。然后另一些人就不高兴了。\n作者暂时也没说啥； 顶多算是与内容不相干的评论吧，也没有（或者说我没看出）恶意； 说让“+1s”的立即去死的，说这些人恶化了p站环境的，实在也不见得比他们口中说的那些人高到哪里去； 若按照p站规定不能发，或作者不喜欢，可以举报/联系作者删掉就是，结果上来就往死里骂。 这就是所谓的优越感么？括弧笑:)\n原图在此。\n","permalink":"/posts/youyuegan/","summary":"今天看到p站上一张出现了某种生物，于是当然有人去众筹时间。然后另一些人就不高兴了。\n作者暂时也没说啥； 顶多算是与内容不相干的评论吧，也没有（或者说我没看出）恶意； 说让“+1s”的立即去死的，说这些人恶化了p站环境的，实在也不见得比他们口中说的那些人高到哪里去； 若按照p站规定不能发，或作者不喜欢，可以举报/联系作者删掉就是，结果上来就往死里骂。 这就是所谓的优越感么？括弧笑:)\n原图在此。","title":"有关迷之优越感的小故事"},{"content":"This is the first html file I have written.\n{% highlight html %}\n\u0026lt;body style=\u0026quot;background-color:lightgrey;\u0026quot;\u0026gt; \u0026lt;h1 style=\u0026quot;color:red;\u0026quot;\u0026gt;This is a red heading\u0026lt;/h1\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;p title=\u0026quot;About YS\u0026quot;\u0026gt; Frederick. I am YS. \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;font-family:verdana;font-size:300%;text-align:center;\u0026quot;\u0026gt; This \u0026lt;br\u0026gt; paragraph contains a lot of lines in the source code, but the browser ignores it. \u0026lt;/p\u0026gt; \u0026lt;!-- this is a comment --\u0026gt; \u0026lt;p\u0026gt;Here is a quote from WWF's website:\u0026lt;/p\u0026gt; \u0026lt;blockquote cite=\u0026quot;http://www.worldwildlife.org/who/index.html\u0026quot;\u0026gt; For 50 years, WWF has been protecting the future of nature. The world's leading conservation organization, WWF works in 100 countries and is supported by 1.2 million members in the United States and close to 5 million globally. \u0026lt;/blockquote\u0026gt; \u0026lt;h2\u0026gt;Unordered List with Default Bullets\u0026lt;/h2\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Coffee\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Tea\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Milk\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;p\u0026gt;I have a date on \u0026lt;time datetime=\u0026quot;2008-02-14 20:00\u0026quot;\u0026gt;Valentines day\u0026lt;/time\u0026gt;.\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; ","permalink":"/posts/my-first-html/","summary":"This is the first html file I have written.\n{% highlight html %}\n\u0026lt;body style=\u0026quot;background-color:lightgrey;\u0026quot;\u0026gt; \u0026lt;h1 style=\u0026quot;color:red;\u0026quot;\u0026gt;This is a red heading\u0026lt;/h1\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;p title=\u0026quot;About YS\u0026quot;\u0026gt; Frederick. I am YS. \u0026lt;/p\u0026gt; \u0026lt;p style=\u0026quot;font-family:verdana;font-size:300%;text-align:center;\u0026quot;\u0026gt; This \u0026lt;br\u0026gt; paragraph contains a lot of lines in the source code, but the browser ignores it. \u0026lt;/p\u0026gt; \u0026lt;!-- this is a comment --\u0026gt; \u0026lt;p\u0026gt;Here is a quote from WWF's website:\u0026lt;/p\u0026gt; \u0026lt;blockquote cite=\u0026quot;http://www.worldwildlife.org/who/index.html\u0026quot;\u0026gt; For 50 years, WWF has been protecting the future of nature.","title":"Learning HTML"},{"content":"尝试发一下翻唱。原唱为五月天。\n歌词：\n走在风中今天阳光 突然好温柔 天的温柔地的温柔 像你抱着我\n然后发现你的改变 孤单的今后 如果冷该怎么渡过\n天边风光身边的我 都不在你眼中 你的眼中藏着什么 我从来都不懂\n没有关系你的世界 就让你拥有 不打扰是我的温柔\n不知道不明了不想要为什么我的心 明明是想靠近 却孤单到黎明\n不知道不明了不想要为什么我的心 那爱情的绮丽 总是在孤单里 再把我的最好的爱给你\n不知不觉不情不愿 又到巷子口 我没有哭也没有笑 因为这是梦\n没有预兆没有理由 你真的有说过 如果有就让你自由\n自由 这是我的温柔 这是我的温柔 \u0026hellip; 这是我的 温柔\n","permalink":"/posts/wenrou/","summary":"尝试发一下翻唱。原唱为五月天。\n歌词：\n走在风中今天阳光 突然好温柔 天的温柔地的温柔 像你抱着我\n然后发现你的改变 孤单的今后 如果冷该怎么渡过\n天边风光身边的我 都不在你眼中 你的眼中藏着什么 我从来都不懂\n没有关系你的世界 就让你拥有 不打扰是我的温柔\n不知道不明了不想要为什么我的心 明明是想靠近 却孤单到黎明\n不知道不明了不想要为什么我的心 那爱情的绮丽 总是在孤单里 再把我的最好的爱给你\n不知不觉不情不愿 又到巷子口 我没有哭也没有笑 因为这是梦\n没有预兆没有理由 你真的有说过 如果有就让你自由\n自由 这是我的温柔 这是我的温柔 \u0026hellip; 这是我的 温柔","title":"温柔 - 翻唱"},{"content":"Hello everyone! This is my first post. In this post, I will teach you how to make a website just like this one using Jekyll. Even if you know nothing about how to write a webpage, it will only take few minutes. In fact, I am also a green hand and not familiar with everything of Jekyll, but let\u0026rsquo;s study together.\nFirst, you could go to Burela\u0026rsquo;s House-O-Blog to find the easily way to install Jekyll by Chocolatey. Follow his steps and it only takes 2 steps.\nThen in command prompt use Jekyll new blog to creat a new project or just fork this project at Github. After going into the folder (cd blog), use Jekyll serve to start the service.\nOpen your browser, type in http://localhost:4000/, press Enter and that\u0026rsquo;s it!\nYou may notice this is just a rewrite of Burela\u0026rsquo;s method. I post this just for a review of the contents myself.\nThis line is for demonstration of catalog. Have a good day!\n","permalink":"/posts/first-post/","summary":"Hello everyone! This is my first post. In this post, I will teach you how to make a website just like this one using Jekyll. Even if you know nothing about how to write a webpage, it will only take few minutes. In fact, I am also a green hand and not familiar with everything of Jekyll, but let\u0026rsquo;s study together.\nFirst, you could go to Burela\u0026rsquo;s House-O-Blog to find the easily way to install Jekyll by Chocolatey.","title":"First Post - how to make a website by Jekyll"},{"content":"You can write regular markdown here and Jekyll will automatically convert it to a nice webpage. I strongly encourage you to take 5 minutes to learn how to write in markdown - it\u0026rsquo;ll teach you how to transform regular text into bold/italics/headings/tables/etc.\nHere is some bold text\nHere is a secondary heading Here\u0026rsquo;s a useless table:\nNumber Next number Previous number Five Six Four Ten Eleven Nine Seven Eight Six Two Three One How about a yummy crepe?\nHere\u0026rsquo;s a code chunk:\nvar foo = function(x) { return(x + 5); } foo(3) And here is the same code with syntax highlighting:\nvar foo = function(x) { return(x + 5); } foo(3) And here is the same code yet again but with line numbers:\n{% highlight javascript linenos %} var foo = function(x) { return(x + 5); } foo(3) {% endhighlight %}\nBoxes You can add notification, warning and error boxes like this:\nNotification {: .box-note} Note: This is a notification box.\nWarning {: .box-warning} Warning: This is a warning box.\nError {: .box-error} Error: This is an error box.\n","permalink":"/posts/test-markdown/","summary":"You can write regular markdown here and Jekyll will automatically convert it to a nice webpage. I strongly encourage you to take 5 minutes to learn how to write in markdown - it\u0026rsquo;ll teach you how to transform regular text into bold/italics/headings/tables/etc.\nHere is some bold text\nHere is a secondary heading Here\u0026rsquo;s a useless table:\nNumber Next number Previous number Five Six Four Ten Eleven Nine Seven Eight Six Two Three One How about a yummy crepe?","title":"Test markdown"},{"content":"2023-02-04 - migrated to hugo.\nThis is the initial post generated by Jekyll. I will leave it here.\nYou’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.\nTo add new posts, simply add a file in the _posts directory that follows the convention YYYY-MM-DD-name-of-post.ext and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.\nJekyll also offers powerful support for code snippets:\n{% highlight ruby %} def print_hi(name) puts \u0026ldquo;Hi, #{name}\u0026rdquo; end print_hi(\u0026lsquo;Tom\u0026rsquo;) #=\u0026gt; prints \u0026lsquo;Hi, Tom\u0026rsquo; to STDOUT. {% endhighlight %}\nCheck out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll Talk.\n","permalink":"/posts/welcome-to-jekyll/","summary":"2023-02-04 - migrated to hugo.\nThis is the initial post generated by Jekyll. I will leave it here.\nYou’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.","title":"Welcome to Jekyll!"},{"content":"Brief intro Just another software engineer, anime fan, and music lover at North California.\nHappy to know interesting things and you!\nInterests and hobbies Anime, Manga\nSci-Fi Movies\nAcoustic/Electric Guitar, Singing, Cubase\nStrength training, Badminton, Swimming\nComputer Science and Engineering related areas\nTasty food, Cooking\nNo longer get much time for: Drawing, Erhu, Tai chi\nMobile games played for long time Arknights - JP server\nさよなら:\nPrincess Connect, Re: Dive (PCR) - JP server\nAzur Lane - JP server\nFate/Grand Order (FGO) - JP server\nEducation MS in Computer Engineering, San Jose State University\nMS in Chemical Engineering, Florida State University\nBEng in Chemical Eng. and Tech., Huazhong University of Science and Technology\nOther info Member of Shenghan - SH. 1102\nContact GitHub: https://github.com/ysmiles\nEmail: fromblog@ysmiles.com\n","permalink":"/about/","summary":"Brief intro Just another software engineer, anime fan, and music lover at North California.\nHappy to know interesting things and you!\nInterests and hobbies Anime, Manga\nSci-Fi Movies\nAcoustic/Electric Guitar, Singing, Cubase\nStrength training, Badminton, Swimming\nComputer Science and Engineering related areas\nTasty food, Cooking\nNo longer get much time for: Drawing, Erhu, Tai chi\nMobile games played for long time Arknights - JP server\nさよなら:\nPrincess Connect, Re: Dive (PCR) - JP server","title":"About me"}]